{"version":3,"sources":["redux/rootReducer/reducer/reducer.js","redux/constants.js","services/BoardHelper.js","redux/boardReducer/reducer/reducer.js","services/ListHelper.js","redux/listReducer/reducer/reducer.js","services/CardHelper.js","redux/cardReducer/reducer/reducer.js","services/CheckListHelper.js","redux/checkListReducer/reducer/reducer.js","redux/store/index.js","serviceWorker.js","redux/rootReducer/actions/actions.js","redux/boardReducer/actions/actions.js","components/BaseComponent.jsx","components/ClickOutside/ClickOutside.jsx","components/Board/BoardAdd.jsx","pages/Boards.jsx","redux/listReducer/actions/actions.js","components/Board/BoardTitle/BoardTitleEdit.jsx","components/Board/BoardTitle/BoardTitle.jsx","components/Board/BoardHeader.jsx","components/Sidebar/SidebarNavigationList.js","components/Sidebar/SidebarNavigation.jsx","components/Board/BoardBackgroundEdit.jsx","components/Board/BoardDelete.jsx","components/Sidebar/Sidebar.jsx","components/List/ListAdd.jsx","components/List/ListActions/ListActionsNavigationList.js","components/List/ListActions/ListActionsNavigation.jsx","components/List/ListDeleteAllCards.jsx","components/Select/Select.jsx","components/List/ListMoveAllCards.jsx","components/List/ListDelete.jsx","components/List/ListMove.jsx","components/List/ListActions/ListActions.jsx","components/List/ListTitle/ListTitleEdit.jsx","components/List/ListTitle/ListTitle.jsx","components/List/ListHeader.jsx","redux/cardReducer/actions/actions.js","components/Card/CardAdd.jsx","components/Label/Label.jsx","components/Card/Card.jsx","components/List/ListCards.jsx","components/List/List.jsx","pages/Board.jsx","redux/checkListReducer/actions/actions.js","components/Checklist/CheckListAdd.jsx","components/Card/CardDelete.jsx","components/Label/LabelAdd.jsx","components/CardModal/CardTooltip.jsx","components/CardModal/CardActions.jsx","components/Checklist/CheckListProgress.jsx","components/Checklist/CheckListItem/CheckListItemAdd.jsx","components/Checklist/CheckListTitle/CheckListTitleEdit.jsx","components/Checklist/CheckListTitle/CheckListTitle.jsx","components/Checklist/CheckListItem/CheckListItem.jsx","components/Checklist/CheckList.jsx","components/CardModal/CardTitle/CardTitleEdit.jsx","components/CardModal/CardTitle/CardTitle.jsx","components/CardModal/CardDescription/CardDescriptionEdit.jsx","components/CardModal/CardDescription/CardDescription.jsx","pages/CardModal.jsx","pages/NotFound.jsx","routes/Routes.jsx","helpers/normalizeBoards.js","data.js","components/Header/HeaderNavigationList.js","components/Header/Header.jsx","components/Loader/Loader.jsx","App.jsx","helpers/fontawesome.js","index.js","images/logo.svg"],"names":["initialState","currentBoardID","isLoading","isSidebarOpened","colors","labels","_labelId","color","rootReducer","state","action","type","payload","undefined","Board","boardId","boardTitle","boardColor","_boardId","title","lists","listId","concat","sourceIndex","destinationIndex","newLists","Array","from","splice","removedList","newBoardId","newListPosition","oldBoardLists","indexOf","newBoardList","deleteListId","filter","boardReducer","boards","Bh","addBoard","editBoardTitle","editBoardColor","moveList","moveListToAnotherBoard","deleteBoard","addListToBoard","deleteListFromBoard","List","listTitle","_listId","cards","newCardId","sourceListIndex","destinationListIndex","newCards","removedCard","sourceCards","destinationCards","newListId","deleteCardId","cardId","listReducer","Lh","addList","editListTitle","moveCard","moveAllCards","deleteList","deleteAllCards","addCardToList","deleteCardFromList","Card","cardTitle","_cardId","description","cardLabels","checkLists","checkListId","cardLabel","isLabelExist","some","label","newCardLabel","cardDescription","deleteCheckListId","cardReducer","Ch","addCard","addLabelToCard","editCardTitle","editCardDesc","deleteCard","addCheckListToCard","deleteCheckListFromCard","CheckList","checkListTitle","_checkListId","items","status","checkListItemIndex","map","item","index","checkListReducer","CLh","addCheckList","addCheckListItem","editCheckListTitle","updateCheckListItem","deleteCheckList","deleteCheckListItem","history","createBrowserHistory","middleware","routerMiddleware","store","createStore","combineReducers","router","connectRouter","applyMiddleware","Boolean","window","location","hostname","match","requestBoards","responseBoardsSuccess","fields","setCurrentBoardID","toggleSidebar","Text","styled","p","Label","Input","input","props","width","margin","padding","size","weight","displayName","TextArea","textarea","Actions","div","SubmitButton","button","CancelButton","wave","keyframes","CheckBox","Wrapper","ClickOutside","outerClick","e","target","closest","toggleOpened","this","document","addEventListener","removeEventListener","className","children","Component","defaultProps","AddButton","Container","ColorPicker","ColorPickerItem","BoardAdd","handleKeyDown","keyCode","handleChange","key","value","setState","isOpened","handleSubmit","preventDefault","Date","now","toString","actions","push","render","onSubmit","placeholder","onKeyDown","onChange","spellCheck","autoFocus","onClick","icon","disabled","connect","dispatch","bindActionCreators","Title","h1","BoardList","ul","BoardItem","li","BoardTitle","h2","BoardScheme","BoardSchemeBar","height","Boards","boardsItems","Object","keys","listItems","board","to","list","find","Math","min","length","Form","form","BoardTitleEdit","toggleEditTitle","inputWidth","onBlur","onKeyPress","editTitle","Header","Button","BoardHeader","SidebarNavigation","component","h3","Item","Link","a","Icon","i","changeView","navigation","SidebarNavigationList","BoardBackgroundEdit","BoardDelete","Body","Sidebar","sidebarView","sidebarTitle","ListAdd","focus","ref","ListActionsNavigationList","ListActionsNavigation","ListDeleteAllCards","Dropdown","DropdownItem","DropdownTitle","Select","toggleDropdown","options","name","readOnly","option","tabIndex","onMouseDown","ListMoveAllCards","listIdSelector","listsOptions","id","ListDelete","ListMove","currentListPosition","setNewBoardId","listLength","boardIdSelector","boardsOptions","listPositionSelector","positionOptions","position","ListActions","actionView","actionTitle","ListTitleEdit","ListTitle","dragHandleProps","ListHeader","CardAdd","rows","React","createRef","LabelList","LabelItem","CardWrapper","isDragging","BadgeList","BadgeItem","done","CardBadges","card","allCheckListItems","doneCheckListItems","forEach","checklist","isDraggingOver","draggableId","provided","snapshot","draggableProps","innerRef","style","background","ownProps","CardLIst","InnerList","cardsId","ListCards","componentDidUpdate","prevProps","scrollToBottom","listEnd","scrollIntoView","droppableId","droppableProps","el","listsId","handleDragEnd","result","destination","source","params","currentBoardId","onDragEnd","direction","CheckListAdd","toggleTooltip","CardDelete","LabelIcon","LabelAdd","addLabel","h4","CardTooltip","body","ActionList","ActionItem","CardActions","toggleIsOpened","actionItems","ProgressBar","Progress","CheckListProgress","allItems","doneItems","toFixed","CheckListItemAdd","CheckListTitleEdit","CheckListTitle","HideCheckBox","Description","CheckListItem","handleDelete","handleStatus","hideCompletedItems","stopPropagation","viewBox","points","checked","CheckListContainer","checkList","toggleHideCompletedItems","CardTitleEdit","CardTitle","textareaLineHeight","CardDescriptionEdit","toggleEditDescription","minRows","previousRows","overflow","currentRows","scrollHeight","AddDescription","CardDescription","editDescription","Backdrop","CloseBackdrop","CloseButton","Row","Col","TitleContainer","DescriptionContainer","LabelContainer","ChecklistContainer","boardUrl","Svg","svg","NotFound","lineDraw","current","path","firstChild","getTotalLength","transition","WebkitTransition","strokeDasharray","strokeDashoffset","getBoundingClientRect","stroke","strokeWidth","fill","d","Routes","exact","CardModal","normalizeBoards","checkListsById","schema","Entity","idAttribute","cardById","listById","normalize","entities","HeaderNavigationList","faIcon","Nav","nav","NavList","NavItem","NavIcon","NavTitle","Logo","img","currentPath","pathname","headerBackground","src","logo","opacity","Spinner","styles","css","createCSS","Loader","MainWrapper","HeaderWrapper","header","ContentWrapper","main","App","Promise","resolve","normalizeBoardsData","setTimeout","then","response","catch","error","console","log","library","add","faColumns","faTrash","faEllipsisH","faTimes","faPencilAlt","faCheck","faWindowMaximize","faAlignLeft","faTag","faCheckSquare","faChevronLeft","faFillDrip","GlobalStyle","createGlobalStyle","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.eb85d207.chunk.js","sourcesContent":["import * as t from '../../constants';\n\nexport const initialState = {\n  currentBoardID: null,\n  isLoading: false,\n  isSidebarOpened: false,\n  colors: ['#2E7EAF', '#00603d', '#D29034', '#89609D', '#CD5A91'],\n  labels: [\n    { _labelId: 0, color: '#61BC4F' },\n    { _labelId: 1, color: '#F2D600' },\n    { _labelId: 2, color: '#FF9F1A' },\n    { _labelId: 3, color: '#EB5A46' },\n    { _labelId: 4, color: '#C376E0' },\n    { _labelId: 5, color: '#0078BF' }\n  ],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case t.REQUEST_BOARDS:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case t.RESPONSE_BOARDS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case t.SET_CURRENT_BOARD_ID:\n      return {\n        ...state,\n        currentBoardID: action.payload\n      };\n    case t.TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        isSidebarOpened: action.payload !== undefined\n          ? action.payload\n          : !state.isSidebarOpened,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","//rootReducer\nexport const REQUEST_BOARDS = 'REQUEST_BOARDS';\nexport const RESPONSE_BOARDS_SUCCESS = 'RESPONSE_BOARDS_SUCCESS';\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\n\n//boardReducer\nexport const ADD_BOARD = 'ADD_BOARD';\nexport const EDIT_BOARD_TITLE = 'EDIT_BOARD_TITLE';\nexport const EDIT_BOARD_COLOR = 'EDIT_BOARD_COLOR';\nexport const MOVE_LIST = 'MOVE_LIST';\nexport const MOVE_LIST_TO_ANOTHER_BOARD = 'MOVE_LIST_TO_ANOTHER_BOARD';\nexport const DELETE_BOARD = 'DELETE_BOARD';\n\n//listReducer\nexport const ADD_LIST = 'ADD_LIST';\nexport const EDIT_LIST_TITLE = 'EDIT_LIST_TITLE';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const MOVE_ALL_CARDS = 'MOVE_ALL_CARDS';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const DELETE_ALL_CARDS = 'DELETE_ALL_CARDS';\n\n//cardReducer\nexport const ADD_CARD = 'ADD_CARD';\nexport const ADD_LABEL_TO_CARD = 'ADD_LABEL_TO_CARD';\nexport const EDIT_CARD_TITLE = 'EDIT_CARD_TITLE';\nexport const EDIT_CARD_DESCRIPTION = 'EDIT_CARD_DESCRIPTION';\nexport const DELETE_CARD = 'DELETE_CARD';\n\n//checkListReducer\nexport const ADD_CHECKLIST = 'ADD_CHECKLIST';\nexport const ADD_CHECKLIST_ITEM = 'ADD_CHECKLIST_ITEM';\nexport const EDIT_CHECKLIST_TITLE = 'EDIT_CHECKLIST_TITLE';\nexport const UPDATE_CHECKLIST_ITEM = 'UPDATE_CHECKLIST_ITEM';\nexport const DELETE_CHECKLIST = 'DELETE_CHECKLIST';\nexport const DELETE_CHECKLIST_ITEM = 'DELETE_CHECKLIST_ITEM';\n","class Board {\n  static addBoard(state, payload) {\n    const { boardId, boardTitle, boardColor } = payload;\n    return {\n      ...state,\n      [boardId]: {\n        _boardId: boardId,\n        title: boardTitle,\n        color: boardColor,\n        lists: [],\n      }\n    }\n  }\n\n  static addListToBoard(state, payload) {\n    const { boardId, listId } = payload;\n    return {\n      ...state,\n      [boardId]: {\n        ...state[boardId],\n        lists: state[boardId].lists.concat(listId)\n      }\n    }\n  }\n\n  static editBoardTitle(state, payload) {\n    const { boardId, boardTitle } = payload;\n    return {\n      ...state,\n      [boardId]: {\n        ...state[boardId],\n        title: boardTitle\n      }\n    };\n  }\n\n  static editBoardColor(state, payload) {\n    const { boardId, boardColor } = payload;\n    return {\n      ...state,\n      [boardId]: {\n        ...state[boardId],\n        color: boardColor\n      }\n    };\n  }\n\n  static moveList(state, payload) {\n    const { boardId, sourceIndex, destinationIndex } = payload;\n    const newLists = Array.from(state[boardId].lists);\n    const [removedList] = newLists.splice(sourceIndex, 1);\n    newLists.splice(destinationIndex, 0, removedList);\n    return {\n      ...state,\n      [boardId]: {\n        ...state[boardId],\n        lists: newLists\n      }\n    };\n  }\n\n  static moveListToAnotherBoard(state, payload) {\n    const { boardId, newBoardId, listId, newListPosition } = payload;\n    const oldBoardLists = Array.from(state[boardId].lists);\n    const [removedList] = oldBoardLists.splice(oldBoardLists.indexOf(listId), 1);\n    const newBoardList = Array.from(state[newBoardId].lists);\n    newBoardList.splice(newListPosition, 0, removedList);\n    return {\n      ...state,\n      [boardId]: {\n        ...state[boardId],\n        lists: oldBoardLists\n      },\n      [newBoardId]: {\n        ...state[newBoardId],\n        lists: newBoardList\n      }\n    };\n  }\n\n  static deleteBoard(state, payload) {\n    const { boardId } = payload;\n    const { [boardId]: deletedBoard, ...restOfBoards } = state;\n    return restOfBoards;\n  }\n\n  static deleteListFromBoard(state, payload) {\n    const { boardId, listId: deleteListId } = payload;\n    return {\n      ...state,\n      [boardId]: {\n        ...state[boardId],\n        lists: state[boardId].lists.filter(listId => listId !== deleteListId)\n      },\n    };\n  }\n}\n\nexport default Board;\n","import * as t from '../../constants';\nimport Bh from '../../../services/BoardHelper'\n\nconst boardReducer = (state = {}, action) => {\n  switch (action.type) {\n    case t.RESPONSE_BOARDS_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.boards\n      };\n\n    case t.ADD_BOARD:\n      return Bh.addBoard(state, action.payload);\n    case t.EDIT_BOARD_TITLE:\n      return Bh.editBoardTitle(state, action.payload);\n    case t.EDIT_BOARD_COLOR:\n      return Bh.editBoardColor(state, action.payload);\n    case t.MOVE_LIST:\n      return Bh.moveList(state, action.payload);\n    case t.MOVE_LIST_TO_ANOTHER_BOARD:\n      return Bh.moveListToAnotherBoard(state, action.payload);\n    case t.DELETE_BOARD:\n      return Bh.deleteBoard(state, action.payload);\n\n    case t.ADD_LIST:\n      return Bh.addListToBoard(state, action.payload);\n    case t.DELETE_LIST:\n      return Bh.deleteListFromBoard(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;\n","class List {\n  static addList(state, payload) {\n    const { listTitle, listId } = payload;\n    return {\n      ...state,\n      [listId]: {\n        _listId: listId,\n        title: listTitle,\n        cards: []\n      }\n    }\n  }\n\n  static addCardToList(state, payload) {\n    const { listId, newCardId } = payload;\n    return {\n      ...state,\n      [listId]: {\n        ...state[listId],\n        cards: state[listId].cards.concat(newCardId)\n      },\n    }\n  }\n\n  static editListTitle(state, payload) {\n    const { listTitle, listId } = payload;\n    return {\n      ...state,\n      [listId]: {\n        ...state[listId],\n        title: listTitle,\n      }\n    };\n  }\n\n  static moveCard(state, payload) {\n    const {\n      sourceIndex,\n      destinationIndex,\n      sourceListIndex,\n      destinationListIndex\n    } = payload;\n    // Move within the same list\n    if (sourceListIndex === destinationListIndex) {\n      const newCards = Array.from(state[sourceListIndex].cards);\n      const [removedCard] = newCards.splice(sourceIndex, 1);\n      newCards.splice(destinationIndex, 0, removedCard);\n      return {\n        ...state,\n        [sourceListIndex]: { ...state[sourceListIndex], cards: newCards }\n      };\n    }\n    // Move card from one list to another\n    const sourceCards = Array.from(state[sourceListIndex].cards);\n    const [removedCard] = sourceCards.splice(sourceIndex, 1);\n    const destinationCards = Array.from(state[destinationListIndex].cards);\n    destinationCards.splice(destinationIndex, 0, removedCard);\n    return {\n      ...state,\n      [sourceListIndex]: { ...state[sourceListIndex], cards: sourceCards },\n      [destinationListIndex]: { ...state[destinationListIndex], cards: destinationCards }\n    };\n  }\n\n  static moveAllCards(state, payload) {\n    const { listId, newListId } = payload;\n    return {\n      ...state,\n      [listId]: {\n        ...state[listId],\n        cards: [],\n      },\n      [newListId]: {\n        ...state[newListId],\n        cards: state[newListId].cards.concat(state[listId].cards)\n      }\n    }\n  }\n\n  static deleteList(state, payload) {\n    const { listId } = payload;\n    const { [listId]: deletedList, ...restOfLists } = state;\n    return restOfLists;\n  }\n\n  static deleteCardFromList(state, payload) {\n    const { listId, cardId: deleteCardId } = payload;\n    return {\n      ...state,\n      [listId]: {\n        ...state[listId],\n        cards: state[listId].cards.filter(cardId => cardId !== deleteCardId)\n      },\n    };\n  }\n\n  static deleteAllCards(state, payload) {\n    const { listId } = payload;\n    return {\n      ...state,\n      [listId]: {\n        ...state[listId],\n        cards: []\n      },\n    };\n  }\n\n\n}\n\nexport default List;\n","import * as t from '../../constants';\nimport Lh from '../../../services/ListHelper'\n\nconst listReducer = (state = {}, action) => {\n  switch (action.type) {\n    case t.RESPONSE_BOARDS_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.lists\n      };\n\n    case t.ADD_LIST:\n      return Lh.addList(state, action.payload);\n    case t.EDIT_LIST_TITLE:\n      return Lh.editListTitle(state, action.payload);\n    case t.MOVE_CARD:\n      return Lh.moveCard(state, action.payload);\n    case t.MOVE_ALL_CARDS:\n      return Lh.moveAllCards(state, action.payload);\n    case t.DELETE_LIST:\n      return Lh.deleteList(state, action.payload);\n    case t.DELETE_ALL_CARDS:\n      return Lh.deleteAllCards(state, action.payload);\n\n    case t.ADD_CARD:\n      return Lh.addCardToList(state, action.payload);\n    case t.DELETE_CARD:\n      return Lh.deleteCardFromList(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","class Card {\n  static addCard(state, payload) {\n    const { cardTitle, newCardId } = payload;\n    return {\n      ...state,\n      [newCardId]: {\n        _cardId: newCardId,\n        title: cardTitle,\n        description: '',\n        cardLabels: [],\n        checkLists: [],\n      }\n    }\n  }\n\n  static addCheckListToCard(state, payload) {\n    const { cardId, checkListId } = payload;\n    return {\n      ...state,\n      [cardId]: {\n        ...state[cardId],\n        checkLists: [...state[cardId].checkLists.concat(checkListId)],\n      }\n    }\n  }\n\n  static addLabelToCard(state, payload) {\n    const { cardId, cardLabel} = payload;\n    const isLabelExist = state[cardId].cardLabels.some(label => (\n      label._labelId === cardLabel._labelId\n    ));\n    let newCardLabel = [...state[cardId].cardLabels];\n    if (isLabelExist) {\n      newCardLabel = newCardLabel.filter(label => label._labelId !== cardLabel._labelId);\n    } else {\n      newCardLabel = newCardLabel.concat(cardLabel);\n    }\n    return {\n      ...state,\n      [cardId]: {\n        ...state[cardId],\n        cardLabels: newCardLabel,\n      }\n    }\n  }\n\n  static editCardTitle(state, payload) {\n    const { cardTitle, cardId } = payload;\n    return {\n      ...state,\n      [cardId]: {\n        ...state[cardId],\n        title: cardTitle\n      }\n    };\n  }\n\n  static editCardDesc(state, payload) {\n    const { cardDescription, cardId } = payload;\n    return {\n      ...state,\n      [cardId]: {\n        ...state[cardId],\n        description: cardDescription\n      }\n    };\n  }\n\n  static deleteCard(state, payload) {\n    const { cardId } = payload;\n    const { [cardId]: deletedCard, ...restOfCards } = state;\n    return restOfCards;\n  }\n\n  static deleteCheckListFromCard(state, payload) {\n    const { cardId, checkListId: deleteCheckListId } = payload;\n    return {\n      ...state,\n      [cardId]: {\n        ...state[cardId],\n        checkLists: state[cardId].checkLists.filter(checkListId => checkListId !== deleteCheckListId),\n      }\n    }\n  }\n}\n\nexport default Card;\n","import * as t from '../../constants';\nimport Ch from '../../../services/CardHelper'\n\nconst cardReducer = (state = {}, action) => {\n  switch (action.type) {\n    case t.RESPONSE_BOARDS_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.cards\n      };\n\n    case t.ADD_CARD:\n      return Ch.addCard(state, action.payload);\n    case t.ADD_LABEL_TO_CARD:\n      return Ch.addLabelToCard(state, action.payload);\n    case t.EDIT_CARD_TITLE:\n      return Ch.editCardTitle(state, action.payload);\n    case t.EDIT_CARD_DESCRIPTION:\n      return Ch.editCardDesc(state, action.payload);\n    case t.DELETE_CARD:\n      return Ch.deleteCard(state, action.payload);\n\n    case t.ADD_CHECKLIST:\n      return Ch.addCheckListToCard(state, action.payload);\n    case t.DELETE_CHECKLIST:\n      return Ch.deleteCheckListFromCard(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","class CheckList {\n  static addCheckList(state, payload) {\n    const { checkListId, checkListTitle,} = payload;\n    return {\n      ...state,\n      [checkListId]: {\n        _checkListId: checkListId,\n        title: checkListTitle,\n        items: []\n      }\n    }\n  }\n\n  static addCheckListItem(state, payload) {\n    const { checkListTitle, checkListId} = payload;\n    return {\n      ...state,\n      [checkListId]: {\n        ...state[checkListId],\n        items: [...state[checkListId].items.concat({\n          status: false,\n          description: checkListTitle,\n        })],\n      }\n    };\n  }\n\n  static editCheckListTitle(state, payload) {\n    const {checkListId, checkListTitle} = payload;\n    return {\n      ...state,\n      [checkListId]: {\n        ...state[checkListId],\n        title: checkListTitle,\n      }\n    }\n  }\n\n  static updateCheckListItem(state, payload) {\n    const { status, checkListId, checkListItemIndex} = payload;\n    return {\n      ...state,\n      [checkListId]: {\n        ...state[checkListId],\n        items: state[checkListId].items.map((item, index) => {\n          if (index === checkListItemIndex) {\n            return {\n              ...state[checkListId].items[checkListItemIndex],\n              status: status\n            }\n          } else {\n            return item\n          }\n        })\n      }\n    };\n  }\n\n  static deleteCheckList(state, payload) {\n    const { checkListId } = payload;\n    const { [checkListId]: deletedList, ...restOfLists } = state;\n    return restOfLists;\n  }\n\n  static deleteCheckListItem(state, payload) {\n    const {checkListId, checkListItemIndex } = payload;\n    return {\n      ...state,\n      [checkListId]: {\n        ...state[checkListId],\n        items: state[checkListId].items.filter((item, index) => index !== checkListItemIndex)\n      }\n    };\n  }\n}\n\nexport default CheckList;\n","import * as t from '../../constants';\nimport CLh from '../../../services/CheckListHelper'\n\nconst checkListReducer = (state = {}, action) => {\n  switch (action.type) {\n    case t.RESPONSE_BOARDS_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.checkLists\n      };\n\n    case t.ADD_CHECKLIST:\n      return CLh.addCheckList(state, action.payload);\n    case t.ADD_CHECKLIST_ITEM:\n      return CLh.addCheckListItem(state, action.payload);\n    case t.EDIT_CHECKLIST_TITLE:\n      return CLh.editCheckListTitle(state, action.payload);\n    case t.UPDATE_CHECKLIST_ITEM:\n      return CLh.updateCheckListItem(state, action.payload);\n    case t.DELETE_CHECKLIST:\n      return CLh.deleteCheckList(state, action.payload);\n    case t.DELETE_CHECKLIST_ITEM:\n      return CLh.deleteCheckListItem(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default checkListReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\n\nimport rootReducer from '../rootReducer/reducer/reducer';\nimport boardReducer from '../boardReducer/reducer/reducer';\nimport listReducer from '../listReducer/reducer/reducer';\nimport cardReducer from '../cardReducer/reducer/reducer';\nimport checkListReducer from '../checkListReducer/reducer/reducer';\n\n// Create a history of your choosing (we're using a browser history in this case)\nexport const history = createBrowserHistory();\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst middleware = routerMiddleware(history);\n\n// Add the reducer to your store on the `router` key\n// Also apply our middleware for navigating\nexport const store = createStore(\n  combineReducers({\n    router: connectRouter(history),\n    rootReducer,\n    boardReducer,\n    listReducer,\n    cardReducer,\n    checkListReducer,\n  }),\n  applyMiddleware(middleware)\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as t from '../../constants';\n\nexport const requestBoards = () => ({\n  type: t.REQUEST_BOARDS,\n});\n\nexport const responseBoardsSuccess = (fields) => ({\n  type: t.RESPONSE_BOARDS_SUCCESS,\n  payload: fields\n});\n\nexport const setCurrentBoardID = (fields) => ({\n  type: t.SET_CURRENT_BOARD_ID,\n  payload: fields\n});\n\nexport const toggleSidebar = (fields) => ({\n  type: t.TOGGLE_SIDEBAR,\n  payload: fields\n});\n","import * as t from '../../constants';\n\nexport const addBoard = (fields) => ({\n  type: t.ADD_BOARD,\n  payload: fields\n});\n\nexport const editBoardColor = (fields) => ({\n  type: t.EDIT_BOARD_COLOR,\n  payload: fields\n});\n\nexport const editBoardTitle = (fields) => ({\n  type: t.EDIT_BOARD_TITLE,\n  payload: fields\n});\n\nexport const moveList = (fields) => ({\n  type: t.MOVE_LIST,\n  payload: fields\n});\n\nexport const moveListToAnotherBoard = (fields) => ({\n  type: t.MOVE_LIST_TO_ANOTHER_BOARD,\n  payload: fields\n});\n\nexport const deleteBoard = (fields) => ({\n  type: t.DELETE_BOARD,\n  payload: fields\n});\n","import styled, { keyframes } from \"styled-components\";\n\nexport const Text = styled.p`\n  margin-bottom: .5rem;\n  font-size: 1rem;\n  color: #40424b;\n`;\n\nexport const Label = styled.label`\n  font-size: .75rem;\n  line-height: 1.3rem;\n  color: #6b778c;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  max-width: 100%;\n  width: ${props => props.width ? props.width : '100%'};\n  margin: ${props => props.margin ? props.margin : '0 0 .5rem 0'};\n  padding: ${props => props.padding ? props.padding : '.5rem'};\n  font-family: 'Roboto', sans-serif;\n  font-size: ${props => props.size ? props.size : '1rem'};\n  color: #40424b;\n  font-weight: ${props => props.weight ? props.weight : 'normal'};\n  line-height: 1rem;\n  letter-spacing: .5px;\n  background-color: #fff;\n  border: 0;\n  border-radius: .2rem;\n  box-shadow: 0 1px 0 rgba(9,30,66,.25);\n`;\nInput.displayName = 'Input';\n\nexport const TextArea = styled.textarea`\n  max-width: 100%;\n  width: ${props => props.width ? props.width : '100%'};\n  margin: ${props => props.margin ? props.margin : '0 0 .5rem 0'};\n  padding: ${props => props.padding ? props.padding : '.5rem'};\n  font-family: 'Roboto', sans-serif;\n  font-size: ${props => props.size ? props.size : '1rem'};\n  color: #40424b;\n  line-height: 1rem;\n  letter-spacing: .5px;\n  background-color: #fff;\n  border: 0;\n  border-radius: .2rem;\n  box-shadow: 0 1px 0 rgba(9,30,66,.25);\n  resize: none;\n`;\nTextArea.displayName = 'TextArea';\n\nexport const Actions = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const SubmitButton = styled.button`\n  margin-right: .5rem;\n  padding: .5rem .75rem;\n  color: #fff;\n  font-weight: 700;\n  font-size: .875rem;\n  border: 0;\n  background-color: ${props => \n    props.color === 'danger' \n      ? '#cf513d' \n      : '#5aac44'\n  };\n  box-shadow: 0 1px 0 0 ${props =>\n    props.color === 'danger'\n      ? '#6e2f1a'\n      : '#3f6f21'\n  };\n  border-radius: .2rem;\n  cursor: pointer;\n  transition: background-color .2s ease-in;\n  &:hover {\n    background-color: ${props =>\n      props.color === 'danger'\n        ? '#b04632'\n        : '#519839'\n    };\n  }\n`;\nSubmitButton.displayName = 'SubmitButton';\n\nexport const CancelButton = styled.button`\n  padding: .5rem;\n  font-size: 1rem;\n  color: #6b778c;\n  cursor: pointer;\n  transition: color .1s ease-in;\n  &:hover {\n    color: #42526e;\n  }\n`;\nCancelButton.displayName = 'CancelButton';\n\nconst wave = keyframes`\n  50% {\n    transform: scale(0.9);\n  }\n`;\n\nexport const CheckBox = styled.div`\n  margin-right: .5rem;\n  user-select: none;\n  cursor: pointer;\n  -webkit-tap-highlight-color:transparent;\n  span {\n    display: inline-block;\n    vertical-align: middle;\n    transform: translate3d(0, 0, 0);\n    &:first-child {\n      position: relative;\n      width: 1.125rem;\n      height: 1.125rem;\n      border-radius: .2rem;\n      transform: scale(1);\n      vertical-align: middle;\n      box-shadow: ${props => props.status ? 'none' : 'inset 0 0 0 2px #dfe1e6'};\n      transition: ${props => props.status ? 'all 0.2s ease' : 'none'};\n      background: ${props => props.status ? 'rgba(9, 30, 66, .04)' : '#fafbfc'};\n      animation: ${wave} 0.4s ease;\n  \n      svg {\n        position: absolute;\n        top: 4px;\n        left: 4px;\n        fill: none;\n        stroke: #42526e;\n        stroke-width: 2;\n        stroke-linecap: round;\n        stroke-linejoin: round;\n        stroke-dasharray: 1rem;\n        transition: all 0.3s ease;\n        transition-delay: 0.1s;\n        transform: translate3d(0, 0, 0);\n       \n        stroke-dashoffset: ${props => props.status ? '0' : '1rem'};\n      }\n    }\n  }\n`;\n\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div``;\nWrapper.displayName = 'Wrapper';\n\nclass ClickOutside extends Component {\n  componentDidMount() {\n    const { action } = this.props;\n    document.addEventListener(!!action ? action : 'click', this.outerClick);\n  }\n\n  componentWillUnmount() {\n    const { action } = this.props;\n    document.removeEventListener(!!action ? action : 'click', this.outerClick);\n  }\n\n  outerClick = (e) => {\n    let { target } = e;\n    if (!!target.closest && (target.closest('.click-outside-wrapper'))) return null;\n    this.props.toggleOpened();\n  };\n\n  render() {\n    return (\n      <Wrapper className=\"click-outside-wrapper\">\n        {this.props.children}\n      </Wrapper>\n    )\n  };\n}\n\nClickOutside.defaultProps = {\n  toggleOpened: () => {}\n};\n\nClickOutside.propTypes = {\n  toggleOpened: PropTypes.func.isRequired\n};\n\nexport default ClickOutside;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { history } from \"../../redux/store\";\nimport { bindActionCreators } from 'redux';\nimport { addBoard } from '../../redux/boardReducer/actions/actions';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Actions, Input, SubmitButton, CancelButton } from '../BaseComponent';\nimport ClickOutside from \"../ClickOutside/ClickOutside\";\nimport styled from 'styled-components';\nimport PropTypes from \"prop-types\";\n\nconst AddButton = styled.button`\n  font-size: 1rem; \n  color: #172b4d;\n  font-weight: 600;\n  background-color: #dadde3;\n  border-radius: .4rem\n  transition: background-color .2s ease-in;\n  cursor: pointer;\n  &:hover {\n    background-color: #c8cace;\n  }\n`;\nAddButton.displayName = 'AddButton';\n\nconst Container = styled.div`\n  height: 100%;\n  padding: 1rem .6rem;\n  background-color: #dadde3;\n  border-radius: .4rem\n`;\n\nconst ColorPicker = styled.div`\n  display: flex;\n  padding: .25rem 0;\n  margin-bottom: .5rem;\n`;\nColorPicker.displayName = 'ColorPicker';\n\nconst ColorPickerItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  font-size: .7rem;\n  color: #fff;\n  background-color: ${props => props.color};\n  border-radius: .4rem;\n  cursor: pointer;\n  &:not(:last-child) {\n    margin-right: .5rem;\n  }\n  &:hover {\n    box-shadow: inset 0 0 0 10rem rgba(0, 0, 0, .1)\n  }\n`;\n\nclass BoardAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n      boardTitle: '',\n      boardColor: props.colors[0] || '',\n    };\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.toggleOpened();\n    }\n  };\n\n  handleChange = (key, value) => {\n    this.setState({\n      ...this.state,\n      [key]: value,\n    });\n  };\n\n  toggleOpened = () => {\n    this.setState({\n      isOpened: !this.state.isOpened,\n      boardTitle: '',\n    })\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    if (!boardTitle) return;\n    const boardId = Date.now().toString();\n    this.props.actions.addBoard({\n      boardTitle: boardTitle,\n      boardColor: this.state.boardColor,\n      boardId: boardId,\n    });\n    history.push(`/b/${boardId}`)\n  };\n\n  render = () => {\n    const { colors } = this.props;\n    const { isOpened, boardTitle, boardColor } = this.state;\n\n    return isOpened ? (\n      <ClickOutside toggleOpened={this.toggleOpened}>\n        <Container color={boardColor}>\n          <form onSubmit={this.handleSubmit}>\n            <Input\n              type=\"text\"\n              placeholder=\"Add board title\"\n              value={boardTitle}\n              onKeyDown={this.handleKeyDown}\n              onChange={(e) => this.handleChange('boardTitle', e.target.value)}\n              spellCheck={false}\n              autoFocus\n            />\n            <ColorPicker>\n              {colors.map((color, index) => (\n                <ColorPickerItem\n                  key={index}\n                  color={color}\n                  onClick={() => this.handleChange('boardColor', color)}\n                >\n                  {boardColor === color && <FontAwesomeIcon icon=\"check\" />}\n                </ColorPickerItem>\n              ))}\n            </ColorPicker>\n            <Actions>\n              <SubmitButton type='submit' disabled={!boardTitle}>\n                Create board\n              </SubmitButton>\n              <CancelButton onClick={() => this.toggleOpened()}>\n                <FontAwesomeIcon icon=\"times\" />\n              </CancelButton>\n            </Actions>\n          </form>\n        </Container>\n      </ClickOutside>\n    ) : (\n      <AddButton onClick={() => this.toggleOpened()}>\n        Create new board...\n      </AddButton>\n    );\n  };\n}\n\nBoardAdd.defaultProps = {\n  colors: [],\n};\n\nBoardAdd.propTypes = {\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    colors: state.rootReducer.colors,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      addBoard: addBoard,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardAdd);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport BoardAdd from '../components/Board/BoardAdd';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  padding: 1rem 1.5rem;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst BoardList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));\n  grid-auto-rows: minmax(9rem, 1fr);\n  grid-gap: 1rem;\n`;\n\nconst BoardItem = styled.li`\n  padding: .6rem;\n  background-color: ${props => props.color};\n  border-radius: .4rem;\n  &:hover {\n    box-shadow: inset 0 0 0 10rem rgba(0, 0, 0, .1);\n  }\n`;\nBoardItem.displayName = 'BoardItem';\n\nconst BoardTitle = styled.h2`\n  margin-bottom: .5rem;\n  font-size: 1rem;\n  color: white;\n  font-weight: 700;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst BoardScheme = styled.div`\n  display: flex;\n  height: 6.25rem;\n  margin-right: .3rem;\n  overflow: hidden;\n`;\n\nconst BoardSchemeBar = styled.div`\n  display: inline-block;\n  flex-shrink: 0;\n  width: 1.5rem;\n  height: ${props => props.height}px;\n  margin-right: .4rem;\n  border-radius: .2rem;\n  background: rgba(255, 255, 255, 0.25);\n`;\nBoardSchemeBar.displayName = 'BoardSchemeBar';\n\nconst Boards = (props) => {\n  const { boards, lists } = props;\n  if (!boards) return;\n  let boardsItems = Object.keys(boards).map(key => boards[key]);\n  let listItems = Object.keys(lists).map(key => lists[key]);\n\n  return (\n    <Wrapper>\n      <Title>\n        My Boards\n      </Title>\n      <BoardList>\n        {boardsItems.map((board, index) => (\n          <NavLink key={index} to={`/b/${board._boardId}`}>\n            <BoardItem color={board.color}>\n              <BoardTitle>\n                {board.title}\n              </BoardTitle>\n              <BoardScheme>\n                {board.lists.map((listId, index) => {\n                  const list = listItems.find(list => list._listId === listId);\n                  return (\n                    <BoardSchemeBar key={index} height={Math.min((list.cards.length + 1) * 10, 100)} />\n                  )\n                })}\n              </BoardScheme>\n            </BoardItem>\n          </NavLink>\n        ))}\n        <BoardAdd />\n      </BoardList>\n    </Wrapper>\n  )\n};\n\nBoards.defaultProps = {\n  boards: null,\n};\n\nBoards.propTypes = {\n  boards: PropTypes.objectOf(\n    PropTypes.shape({\n      _boardId: PropTypes.string.isRequired,\n      title: PropTypes.string,\n      color: PropTypes.string.isRequired,\n      lists: PropTypes.arrayOf(PropTypes.string).isRequired,\n    })\n  ).isRequired,\n  lists: PropTypes.objectOf(\n    PropTypes.shape({\n      _listId: PropTypes.string.isRequired,\n      title: PropTypes.string,\n      cards: PropTypes.arrayOf(PropTypes.string).isRequired\n    })\n  ),\n};\n\nfunction mapStateToProps(state) {\n  return {\n    boards: state.boardReducer,\n    lists: state.listReducer\n  }\n}\n\nexport default connect(mapStateToProps)(Boards);\n","import * as t from '../../constants';\n\nexport const addList = (fields) => ({\n  type: t.ADD_LIST,\n  payload: fields\n});\n\nexport const editListTitle = (fields) => ({\n  type: t.EDIT_LIST_TITLE,\n  payload: fields\n});\n\nexport const moveCard = (fields) => ({\n  type: t.MOVE_CARD,\n  payload: fields\n});\n\nexport const moveAllCards = (fields) => ({\n  type: t.MOVE_ALL_CARDS,\n  payload: fields\n});\n\nexport const deleteList = (fields) => ({\n  type: t.DELETE_LIST,\n  payload: fields\n});\n\nexport const deleteAllCards = (fields) => ({\n  type: t.DELETE_ALL_CARDS,\n  payload: fields\n});\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { editBoardTitle } from '../../../redux/boardReducer/actions/actions';\nimport ClickOutside from '../../ClickOutside/ClickOutside';\nimport { Input } from '../../BaseComponent';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  max-width: calc(100vw - 12rem);\n`;\n\nclass BoardTitleEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.boardTitle || '',\n    };\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.props.toggleEditTitle()\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    if (!title)  return;\n    this.props.actions.editBoardTitle({\n      boardId: this.props.boardId,\n      boardTitle: title\n    });\n    this.props.toggleEditTitle()\n  };\n\n  render() {\n    const { title } = this.state;\n    let inputWidth = (title.length + 1) * 13;\n\n    return (\n      <ClickOutside toggleOpened={this.props.toggleEditTitle}>\n        <Form onSubmit={this.handleSubmit}>\n          <Input\n            type=\"text\"\n            size={'1.3rem'}\n            weight={'600'}\n            margin=\"0\"\n            width={inputWidth + 'px'}\n            value={title}\n            placeholder=\"Edit board title\"\n            onKeyDown={this.handleKeyDown}\n            onChange={this.handleChange}\n            onBlur={this.handleSubmit}\n            onKeyPress={(e) => inputWidth = ((e.target.value.length + 1) * 13)}\n            autoFocus\n            spellCheck={false}\n          />\n        </Form>\n      </ClickOutside>\n    );\n  };\n}\n\nBoardTitleEdit.defaultProps = {\n  toggleEditTitle: () => {},\n};\n\nBoardTitleEdit.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  boardTitle: PropTypes.string,\n  toggleEditTitle: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      editBoardTitle: editBoardTitle,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(BoardTitleEdit);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport BoardTitleEdit from \"./BoardTitleEdit\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  max-width: calc(100vw - 12rem);\n  margin: 0;\n  padding: .5rem;\n  font-size: 1.3rem;\n  color: #fff;\n  font-weight: 600;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\nTitle.displayName = 'Title';\n\nclass BoardTitle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editTitle: false,\n    }\n  }\n\n  toggleEditTitle = () => {\n    this.setState({\n      editTitle: !this.state.editTitle,\n    })\n  };\n\n  render() {\n    const { boards, currentBoardID } = this.props;\n    const { editTitle } = this.state;\n\n    const board = boards[currentBoardID];\n    if (!board) return null;\n\n    return (\n      !editTitle ? (\n        <Title onClick={() => this.toggleEditTitle()}>\n          {board.title}\n        </Title>\n      ) : (\n        <BoardTitleEdit\n          boardId={board._boardId}\n          boardTitle={board.title}\n          toggleEditTitle={this.toggleEditTitle}\n        />\n      )\n    )\n  }\n}\n\nBoardTitle.propTypes = {\n  currentBoardID: PropTypes.string.isRequired,\n  boards: PropTypes.objectOf(\n    PropTypes.shape({\n      _boardId: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      color: PropTypes.string,\n      lists: PropTypes.arrayOf(PropTypes.string),\n    })\n  ).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    boards: state.boardReducer,\n    currentBoardID: state.rootReducer.currentBoardID,\n  }\n}\n\nexport default connect(mapStateToProps)(BoardTitle);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toggleSidebar } from '../../redux/rootReducer/actions/actions';\nimport BoardTitle from './BoardTitle/BoardTitle';\nimport styled from \"styled-components\";\n\nconst Header = styled.div`\n  margin-bottom: 1rem;\n  padding: 0 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Button = styled.button`\n  margin: 0.5rem;\n  padding: .5rem .75rem;\n  font-size: 1rem;\n  color: #fff;\n  white-space: nowrap;\n  border-radius: .2rem;\n  transition: background-color .2s ease-in;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\nButton.displayName = 'Button';\n\nconst BoardHeader = (props) => {\n  const { toggleSidebar } = props.actions;\n\n  return (\n    <Header>\n      <BoardTitle />\n      <Button onClick={() => toggleSidebar()}>\n        Show menu\n      </Button>\n    </Header>\n  )\n};\n\nBoardHeader.defaultProps = {\n  toggleSidebar: () => {},\n};\n\nBoardHeader.propTypes = {\n  toggleSidebar: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      toggleSidebar: toggleSidebar,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(BoardHeader);\n","const SidebarNavigation = [\n  {\n    title: 'Change Background',\n    component: 'BoardBackgroundEdit',\n    icon: 'fill-drip',\n  },\n  {\n    title: 'Delete Board',\n    component: 'BoardDelete',\n    icon: 'trash',\n  },\n];\n\nexport default SidebarNavigation\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SidebarNavigationList from './SidebarNavigationList';\nimport styled from 'styled-components';\n\nconst Title = styled.h3`\n  font-weight: 600;\n`;\n\nconst List = styled.ul``;\nList.displayName = 'List';\n\nconst Item = styled.li`\n  margin-bottom: .5rem;\n  padding: .3rem .5rem;\n  border-radius: .2rem;\n  transition: background-color .2s ease-in;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(9,30,66,.13);\n  }\n`;\n\nconst Link = styled.a`\n  display: flex;\n  align-items: center;\n  font-size: .875rem;\n  font-weight: 700;\n`;\nLink.displayName = 'Link';\n\nconst Icon = styled.i`\n  margin-right: .75rem;\n  color: #42526e;\n`;\n\nclass SidebarNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navigation: SidebarNavigationList,\n    }\n  }\n\n  changeView = (e, item) => {\n    e.preventDefault();\n    this.props.changeView(item.component, item.title)\n  };\n\n  render() {\n    const { navigation } = this.state;\n\n    return (\n      <List>\n        {navigation.map((item, index) => (\n          <Item key={index} >\n            <Link onClick={(e) => this.changeView(e, item)}>\n              <Icon>\n                <FontAwesomeIcon icon={item.icon} />\n              </Icon>\n              <Title>\n                {item.title}\n              </Title>\n            </Link>\n          </Item>\n        ))}\n      </List>\n    );\n  }\n}\n\nSidebarNavigation.defaultProps = {\n  changeView: () => {},\n};\n\nSidebarNavigation.propTypes = {\n  changeView: PropTypes.func.isRequired,\n};\n\nexport default SidebarNavigation;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { editBoardColor } from '../../redux/boardReducer/actions/actions';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst List = styled.ul`\n  position: absolute;\n  top: 90%;\n  display: grid;\n  grid-template-columns: repeat(2, 2fr);\n  grid-gap: .75rem;\n  width: 100%;\n`;\nList.displayName = 'List';\n\nconst Item = styled.li`\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 5rem;\n  background-color: ${props => props.value};\n  border-radius: .5rem;\n  color: #fff;\n  cursor: pointer;\n  &:hover {\n    box-shadow: inset 0 0 0 10rem rgba(0, 0, 0, .1)\n  }\n`;\nButton.displayName = 'Button';\n\nclass BoardBackgroundEdit extends Component {\n  editBoardColor = (color) => {\n    this.props.actions.editBoardColor({\n      boardId: this.props.boardId,\n      boardColor: color\n    });\n  };\n\n  render() {\n    const { boardColor, colors } = this.props;\n\n    return (\n      <Container>\n        <List>\n          {colors.map((color, index) => (\n            <Item key={index}>\n              <Button value={color} onClick={() => this.editBoardColor(color)}>\n                {boardColor === color && <FontAwesomeIcon icon=\"check\" />}\n              </Button>\n            </Item>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n\nBoardBackgroundEdit.defaultProps = {\n  colors: [],\n};\n\nBoardBackgroundEdit.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  boardColor: PropTypes.string.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    colors: state.rootReducer.colors,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      editBoardColor: editBoardColor,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardBackgroundEdit);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { history } from \"../../redux/store\";\nimport { bindActionCreators } from 'redux';\nimport { deleteBoard } from '../../redux/boardReducer/actions/actions';\nimport { Text, SubmitButton } from '../BaseComponent';\n\nclass BoardDelete extends Component {\n  deleteBoard = () => {\n    this.props.actions.deleteBoard({\n      boardId: this.props.boardId\n    });\n    history.push('/')\n  };\n\n  render() {\n    return (\n      <>\n        <Text>\n          All actions will be removed from the activity feed and you won’t be able to re-open the board.\n          There is no undo.\n        </Text>\n        <SubmitButton color='danger' onClick={() => this.deleteBoard()}>\n          Delete board\n        </SubmitButton>\n      </>\n    );\n  }\n}\n\nBoardDelete.propTypes = {\n  boardId: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      deleteBoard: deleteBoard,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(BoardDelete);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toggleSidebar } from '../../redux/rootReducer/actions/actions';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SidebarNavigation from './SidebarNavigation';\nimport BoardBackgroundEdit from '../Board/BoardBackgroundEdit';\nimport BoardDelete from '../Board/BoardDelete';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 19rem;\n  left: 100%;\n  background-color: #F4F5F7;\n  box-shadow: 0 .75rem 1.5rem -.375rem rgba(9,30,66,.25);\n  transform: ${props => props.isOpened ? 'translateX(-100%)' : 'none'};\n  transition: transform .3s ease-in-out;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: .75rem .5rem;\n  border-bottom: 1px solid rgba(9,30,66,.13);\n`;\n\nconst Title = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nconst Button = styled.button`\n  color: #6b778c;\n  font-size: 1rem;\n  transition: color .1s ease-in;\n  &:hover {\n    color: #42526e;\n  }\n`;\nButton.displayName = 'Button';\n\nconst Body = styled.div`\n   padding: .75rem 1rem;\n`;\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarView: null,\n      sidebarTitle: 'Menu',\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.actions.toggleSidebar(false)\n  }\n\n  changeView = (component, title) => {\n    this.setState({\n      sidebarView: component,\n      sidebarTitle: title,\n    });\n  };\n\n  sidebarView = () => {\n    const { boards, currentBoardID } = this.props;\n    const { sidebarView } = this.state;\n\n    let board;\n    if (boards[currentBoardID]) {\n      board = boards[currentBoardID]\n    }\n\n    switch (sidebarView) {\n      case ('BoardBackgroundEdit'):\n        return <BoardBackgroundEdit boardId={board._boardId} boardColor={board.color} />;\n      case ('BoardDelete'):\n        return <BoardDelete boardId={board._boardId} />;\n      default:\n        return <SidebarNavigation changeView={this.changeView} />;\n    }\n  };\n\n  render() {\n    const { isSidebarOpened } = this.props;\n    const { sidebarTitle, sidebarView } = this.state;\n    return (\n      <Wrapper isOpened={isSidebarOpened}>\n        <Header>\n          <Button\n            onClick={() => this.changeView(null, 'Menu')}\n            disabled={!sidebarView}\n          >\n            {!!sidebarView && <FontAwesomeIcon icon=\"chevron-left\" />}\n          </Button>\n          <Title>\n            {sidebarTitle}\n          </Title>\n          <Button onClick={() => this.props.actions.toggleSidebar(false)}>\n            <FontAwesomeIcon icon=\"times\" />\n          </Button>\n        </Header>\n        <Body>\n          {this.sidebarView()}\n        </Body>\n      </Wrapper>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  isSidebarOpened: false,\n  boards: {},\n};\n\nSidebar.propTypes = {\n  currentBoardID: PropTypes.string,\n  isSidebarOpened: PropTypes.bool,\n  boards: PropTypes.objectOf(\n    PropTypes.shape({\n      _boardId: PropTypes.string,\n      title: PropTypes.string,\n      color: PropTypes.string.isRequired,\n      lists: PropTypes.arrayOf(PropTypes.string)\n    })\n  ),\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    boards: state.boardReducer,\n    currentBoardID: state.rootReducer.currentBoardID,\n    isSidebarOpened: state.rootReducer.isSidebarOpened,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      toggleSidebar: toggleSidebar,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { addList } from '../../redux/listReducer/actions/actions';\nimport { Actions, Input, SubmitButton, CancelButton } from '../BaseComponent';\nimport ClickOutside from \"../ClickOutside/ClickOutside\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  flex-shrink:0;\n  width: 16rem;\n  margin: 0 .5rem;\n`;\n\nconst Form = styled.form`\n  padding: .6rem;\n  background-color: #e3e3e3;\n  border-radius: .2rem\n`;\n\nconst AddButton = styled.button`\n  width: 100%;\n  padding: .6rem;\n  font-size: 1rem; \n  color: #fff;\n  text-align: left;\n  border-radius: .2rem;\n  background-color: rgba(0, 0, 0, .12);\n  transition: background-color .2s ease-in;\n  cursor: pointer;\n  &:hover {\n    background: rgba(0, 0, 0, 0.2);\n  }\n`;\nAddButton.displayName = 'AddButton';\n\nclass ListAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n      title: '',\n    };\n  }\n\n  toggleOpened = () => {\n    this.setState({\n      isOpened: !this.state.isOpened,\n      title: '',\n    })\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.toggleOpened();\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    if (!title) return;\n    this.props.actions.addList({\n      boardId: this.props.boardId,\n      listTitle: title,\n      listId: Date.now().toString(),\n    });\n    this.setState({\n      title: ''\n    }, () => {\n      if (!this.input) return null;\n      this.input.focus()\n    })\n  };\n\n  render = () => {\n    const { isOpened, title } = this.state;\n\n    return isOpened ? (\n      <ClickOutside toggleOpened={this.toggleOpened}>\n        <Wrapper>\n          <Form onSubmit={this.handleSubmit}>\n            <Input\n              type=\"text\"\n              value={title}\n              placeholder=\"Enter a list title...\"\n              ref={(e) => { this.input = e }}\n              onKeyDown={this.handleKeyDown}\n              onChange={this.handleChange}\n              spellCheck={false}\n              autoFocus\n            />\n            <Actions>\n              <SubmitButton type=\"submit\" disabled={!title}>\n                Add list\n              </SubmitButton>\n              <CancelButton onClick={() => this.toggleOpened()}>\n                <FontAwesomeIcon icon=\"times\" />\n              </CancelButton>\n            </Actions>\n          </Form>\n        </Wrapper>\n      </ClickOutside>\n    ) : (\n      <Wrapper>\n        <AddButton onClick={() => this.toggleOpened()}>\n          + Add another list\n        </AddButton>\n      </Wrapper>\n    );\n  };\n}\n\nListAdd.propTypes = {\n  boardId: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      addList: addList,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ListAdd);\n","const ListActionsNavigationList = [\n  {\n    title: 'Move List',\n    component: 'ListMove',\n  },\n  {\n    title: 'Move All Cards',\n    component: 'ListMoveAllCards',\n  },\n  {\n    title: 'Delete List',\n    component: 'ListDelete',\n  },\n  {\n    title: 'Delete All Cards',\n    component: 'ListDeleteAllCards',\n  },\n];\n\nexport default ListActionsNavigationList\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport ListActionsNavigationList from \"./ListActionsNavigationList\";\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n`;\n\nconst Item = styled.li`\n  cursor: pointer;\n`;\n\nconst Link = styled.a`\n  display: block;\n  padding: .3rem .75rem;\n  font-weight: 700;\n  transition: all .2s ease-in;\n  &:hover {\n    color: #fff;\n    background-color: #2E7EAF;\n  }\n`;\nLink.displayName = 'Link';\n\nclass ListActionsNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navigation: ListActionsNavigationList,\n    }\n  }\n\n  changeView = (e, item) => {\n    e.preventDefault();\n    this.props.changeView(item.component, item.title)\n  };\n\n  render() {\n    const { navigation } = this.state;\n\n    return (\n      <List>\n        {navigation.map((item, index) => (\n          <Item key={index} >\n            <Link onClick={(e) => this.changeView(e, item)}>\n              {item.title}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    );\n  }\n}\n\nListActionsNavigation.defaultProps = {\n  changeView: () => {},\n};\n\nListActionsNavigation.propTypes = {\n  changeView: PropTypes.func.isRequired,\n};\n\nexport default ListActionsNavigation;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { deleteAllCards } from '../../redux/listReducer/actions/actions';\nimport { SubmitButton, Text } from '../BaseComponent';\n\nclass ListDeleteAllCards extends Component {\n   deleteAllCards =() => {\n    this.props.actions.deleteAllCards({\n      listId: this.props.listId\n    });\n    this.props.toggleOpened();\n  };\n\n  render() {\n    return (\n      <>\n        <Text>\n          This will remove all the cards in this list from the board.\n        </Text>\n        <SubmitButton color='danger' onClick={() => this.deleteAllCards()}>\n          Delete all\n        </SubmitButton>\n      </>\n    );\n  }\n}\n\nListDeleteAllCards.defaultProps = {\n  toggleOpened: () => {},\n};\n\nListDeleteAllCards.propTypes = {\n  listId: PropTypes.string.isRequired,\n  toggleOpened: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      deleteAllCards: deleteAllCards,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ListDeleteAllCards);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '../BaseComponent';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin-bottom: .5rem;\n`;\n\nconst Dropdown = styled.div`\n  position: absolute;\n  top: calc(100% + .5rem);\n  left: 0;\n  width: 100%;\n  max-height: 12rem;\n  box-shadow: 0 .25rem .3rem 0 rgba(4, 19, 23, 0.22);\n  background-color: #ebecf0;\n  opacity: ${props => props.isOpened ? '1' : '0'};\n  visibility: ${props => props.isOpened ? 'visible' : 'hidden'};\n  transform: translateY(-.5rem);\n  transition: .2s all ease-in-out;\n  will-change: transform;\n  z-index: 20;\n`;\nDropdown.displayName = 'Dropdown';\n\nconst DropdownItem = styled.button`\n  width: 100%;\n  padding: 0 .75rem;\n  outline: none;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  cursor: pointer;\n  background-color: transparent;\n  text-align: left;\n  color: #172b4d;\n  transition: all .2s ease-in;\n  &:hover {\n    color: #fff;\n    background-color: #2E7EAF;\n  }\n`;\n\nconst Input = styled.input`\n  position: relative;\n  min-height: 2rem;\n  width: 100%;\n  padding: 0 .75rem;\n  border: 0;\n  background-color: #ebecf0;\n  box-shadow: 0 1px 0 0 rgba(9, 30, 66, .13);\n  color: #172b4d;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  border-radius: .25rem;\n  cursor: pointer;\n  transition: background-color .2s ease-in;\n  &:hover {\n    background-color: #dfe1e6;\n  }\n`;\nInput.displayName = 'Input';\n\nconst DropdownTitle = styled.p``;\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n    };\n  }\n\n  toggleDropdown = (isOpened) => {\n    this.setState({\n      isOpened: typeof isOpened !== 'undefined' ? isOpened : !this.state.isOpened,\n    });\n  };\n\n  render() {\n    let { value, label, options, onChange, placeholder }  = this.props;\n    let { isOpened } = this.state;\n\n    return (\n      <Wrapper onBlur={() => this.toggleDropdown(false)}>\n        <Label>\n          {label}\n          <Input\n            type=\"text\"\n            name={label}\n            value={value}\n            readOnly={true}\n            placeholder={placeholder}\n            onClick={() => this.toggleDropdown()}\n            onChange={() => this.toggleDropdown(true)}\n          />\n        </Label>\n        <Dropdown isOpened={isOpened}>\n          {options && options.map((option, i) => (\n            <DropdownItem\n              key={`${option.value}-${i}`}\n              type=\"button\"\n              tabIndex={-1}\n              onMouseDown={() => {\n                onChange(option.value);\n                this.toggleDropdown(false);\n              }}\n            >\n              <DropdownTitle>\n                {option.title}\n              </DropdownTitle>\n            </DropdownItem>\n          ))}\n        </Dropdown>\n      </Wrapper>\n    );\n  }\n}\n\nSelect.defaultProps = {\n  value: '',\n  label: '',\n  options: [],\n  onChange: () => {},\n  placeholder: '',\n};\n\nSelect.propTypes = {\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType(\n        [PropTypes.string, PropTypes.number]\n      ).isRequired,\n    })\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { moveAllCards } from '../../redux/listReducer/actions/actions';\nimport { SubmitButton } from '../BaseComponent';\nimport Select from '../Select/Select';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-bottom: 1rem;\n`;\n\nclass ListMoveAllCards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newListId: props.listId || null,\n    }\n  }\n\n  moveAllCards =() => {\n    const { listId } = this.props;\n    const { newListId } = this.state;\n    if (listId !== newListId) {\n      this.props.actions.moveAllCards({\n        listId: listId,\n        newListId: newListId,\n      });\n    }\n    this.props.toggleOpened();\n  };\n\n  listIdSelector = () => {\n    const { newListId } = this.state;\n    const { boards, boardId, lists, listId } = this.props;\n    const listsOptions = boards[boardId].lists.map((id) => ({\n      title: listId === id ? `${lists[id].title} (current)` : lists[id].title,\n      value: id,\n    }));\n\n    return (\n      <Select\n        label=\"Board\"\n        placeholder=\"Select board\"\n        value={lists[newListId].title}\n        options={listsOptions}\n        onChange={(id) => this.setState({ newListId: id })}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          {this.listIdSelector()}\n        </Container>\n        <SubmitButton onClick={() => this.moveAllCards()}>\n          Move\n        </SubmitButton>\n      </>\n    );\n  }\n}\n\nListMoveAllCards.defaultProps = {\n  boards: null,\n  lists: null,\n};\n\nListMoveAllCards.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  listId: PropTypes.string.isRequired,\n  boards: PropTypes.objectOf(\n    PropTypes.shape({\n      _boardId: PropTypes.string,\n      title: PropTypes.string,\n      color: PropTypes.string,\n      lists: PropTypes.arrayOf(PropTypes.string).isRequired,\n    })\n  ).isRequired,\n  lists: PropTypes.objectOf(\n    PropTypes.shape({\n      _listId: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      cards: PropTypes.arrayOf(PropTypes.string)\n    })\n  ).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    boards: state.boardReducer,\n    lists: state.listReducer,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      moveAllCards: moveAllCards,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListMoveAllCards);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { deleteList } from '../../redux/listReducer/actions/actions';\nimport { Text, SubmitButton } from '../BaseComponent';\n\nclass ListDelete extends Component {\n  deleteList = () => {\n    const { listId, boardId } = this.props;\n    this.props.actions.deleteList({\n      boardId: boardId,\n      listId: listId,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Text>\n          All actions will be removed from the activity feed and you won’t be able to re-open the list.\n          There is no undo.\n        </Text>\n        <SubmitButton color='danger' onClick={() => this.deleteList()}>\n          Delete list\n        </SubmitButton>\n      </>\n    );\n  }\n}\n\nListDelete.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  listId: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      deleteList: deleteList,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ListDelete);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { moveList, moveListToAnotherBoard } from '../../redux/boardReducer/actions/actions';\nimport { SubmitButton } from '../BaseComponent';\nimport Select from '../Select/Select';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-bottom: 1rem;\n`;\n\nclass ListMove extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newBoardId: props.boardId || null,\n      newListPosition: 1,\n    }\n  }\n\n  moveList =() => {\n    const { boards, boardId, listId } = this.props;\n    const { newBoardId, newListPosition } = this.state;\n    const currentListPosition = boards[boardId].lists.indexOf(listId);\n\n    if (newBoardId === boardId && currentListPosition === newListPosition) {\n      this.props.toggleOpened();\n      return null;\n    }\n\n    if (boardId === newBoardId) {\n      this.props.actions.moveList({\n        boardId: boardId,\n        sourceIndex: boards[boardId].lists.indexOf(listId),\n        destinationIndex: newListPosition - 1,\n      })\n    } else {\n      this.props.actions.moveListToAnotherBoard({\n        boardId: boardId,\n        newBoardId: newBoardId,\n        listId: listId,\n        newListPosition: newListPosition - 1,\n      })\n    }\n  };\n\n  setNewBoardId = (id) => {\n    const { boards } = this.props;\n    const { newListPosition } = this.state;\n    const listLength = boards[id].lists.length;\n\n    if (listLength < newListPosition) {\n      this.setState({ newListPosition: listLength || 1 })\n    }\n\n    this.setState({ newBoardId: id });\n  };\n\n  boardIdSelector = () => {\n    const { newBoardId } = this.state;\n    const { boards, boardId } = this.props;\n    const boardsOptions = Object.keys(boards).map((id) => ({\n      title: boardId === id ? `${boards[id].title} (current)` : boards[id].title,\n      value: id,\n    }));\n\n    return (\n      <Select\n        label=\"Board\"\n        placeholder=\"Select board\"\n        value={boards[newBoardId] ? boards[newBoardId].title : ''}\n        options={boardsOptions}\n        onChange={(id) => this.setNewBoardId(id)}\n      />\n    );\n  };\n\n  listPositionSelector = () => {\n    const { newBoardId, newListPosition } = this.state;\n    const { boards, boardId, listId } = this.props;\n    const currentListPosition = boards[boardId].lists.indexOf(listId);\n    let listLength = boards[newBoardId].lists.length;\n    if (boardId !== newBoardId) listLength = listLength + 1;\n\n    let positionOptions = [...Array(listLength).keys()];\n    positionOptions = positionOptions.map(position => ({\n      title: currentListPosition === position && boardId === newBoardId\n        ? `${++position} (current)`\n        : `${++position}`,\n      value: position,\n    }));\n\n    return (\n      <Select\n        label=\"Position\"\n        placeholder=\"Select position\"\n        value={newListPosition.toString()}\n        options={positionOptions}\n        onChange={(position) => this.setState({ newListPosition: position })}\n      />\n    )\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          {this.boardIdSelector()}\n          {this.listPositionSelector()}\n        </Container>\n        <SubmitButton onClick={() => this.moveList()}>\n          Move\n        </SubmitButton>\n      </>\n    );\n  }\n}\n\nListMove.defaultProps = {\n  boards: null,\n};\n\nListMove.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  listId: PropTypes.string.isRequired,\n  boards: PropTypes.objectOf(\n    PropTypes.shape({\n      _boardId: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      color: PropTypes.string,\n      lists: PropTypes.arrayOf(PropTypes.string).isRequired,\n    })\n  ).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    boards: state.boardReducer,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      moveList: moveList,\n      moveListToAnotherBoard: moveListToAnotherBoard,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListMove);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ClickOutside from \"../../ClickOutside/ClickOutside\";\nimport ListActionsNavigation from './ListActionsNavigation';\nimport ListDeleteAllCards from '../ListDeleteAllCards';\nimport ListMoveAllCards from '../ListMoveAllCards';\nimport ListDelete from '../ListDelete';\nimport ListMove from '../ListMove';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 2rem;\n  left: calc(100% - 2rem);\n  width: 17rem;\n  background-color: #F4F5F7;\n  border-radius: .2rem;\n  box-shadow: rgba(0, 0, 0, 0.3) .125rem .125rem .5rem;\n  z-index: 10;\n`;\n\nconst Container = styled.div`\n  padding: 0 .5rem;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: .4rem;\n  border-bottom: 1px solid rgba(9,30,66,.13);\n`;\n\nconst Body = styled.div`\n   padding: .5rem 0;\n`;\n\nconst Title = styled.h3`\n  font-size: 1em;\n  color: #6b778c;\n`;\n\nconst Button = styled.button`\n  color: #6b778c;\n  font-size: 1rem;\n  transition: color .1s ease-in;\n  &:hover {\n    color: #42526e;\n  }\n`;\n\nclass ListActions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actionView: null,\n      actionTitle: 'List Actions',\n    }\n  }\n\n  changeView = (component, title) => {\n    this.setState({\n      actionView: component,\n      actionTitle: title,\n    });\n  };\n\n  actionView = () => {\n    const { boardId, listId } = this.props;\n    const { actionView } = this.state;\n    switch (actionView) {\n      case ('ListMove'):\n        return (\n          <Container>\n            <ListMove boardId={boardId} listId={listId} toggleOpened={this.props.toggleOpened} />\n          </Container>\n        );\n      case ('ListMoveAllCards'):\n        return (\n          <Container>\n            <ListMoveAllCards boardId={boardId} listId={listId} toggleOpened={this.props.toggleOpened} />\n          </Container>\n        );\n      case ('ListDeleteAllCards'):\n        return (\n          <Container>\n            <ListDeleteAllCards listId={listId} toggleOpened={this.props.toggleOpened} />\n          </Container>\n        );\n      case ('ListDelete'):\n        return (\n          <Container>\n            <ListDelete boardId={boardId} listId={listId}/>\n          </Container>\n        );\n      default:\n        return <ListActionsNavigation changeView={this.changeView}/>;\n    }\n  };\n\n  render = () => {\n    const { actionView, actionTitle } = this.state;\n\n    return (\n      <ClickOutside action={'mousedown'} toggleOpened={this.props.toggleOpened}>\n        <Wrapper>\n          <Header>\n            <Button disabled={!actionView} onClick={() => this.changeView(null, 'List Actions')}>\n              {!!actionView && <FontAwesomeIcon icon=\"chevron-left\" />}\n            </Button>\n            <Title>\n              {actionTitle}\n            </Title>\n            <Button onClick={() => this.props.toggleOpened}>\n              <FontAwesomeIcon icon=\"times\" />\n            </Button>\n          </Header>\n          <Body>\n            {this.actionView()}\n          </Body>\n        </Wrapper>\n      </ClickOutside>\n    )\n  };\n}\n\nListActions.defaultProps = {\n  boardId: '',\n  listId: '',\n  toggleOpened: () => {},\n};\n\nListActions.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  listId: PropTypes.string.isRequired,\n  toggleOpened: PropTypes.func.isRequired,\n};\n\nexport default ListActions;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { editListTitle } from '../../../redux/listReducer/actions/actions';\nimport ClickOutside from \"../../ClickOutside/ClickOutside\";\nimport { Input } from '../../BaseComponent';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  width: 90%;\n`;\n\nclass ListTitleEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.listTitle || '',\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.props.toggleEditTitle()\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    const { listId } = this.props;\n    if (!title)  return;\n    this.props.actions.editListTitle({\n      listTitle: title,\n      listId: listId\n    });\n    this.props.toggleEditTitle()\n  };\n\n  render = () => {\n    const { title } = this.state;\n\n    return (\n      <ClickOutside toggleOpened={this.props.toggleEditTitle}>\n        <Form onSubmit={this.handleSubmit}>\n          <Input\n            type=\"text\"\n            margin=\"0\"\n            padding=\".3rem .5rem\"\n            weight=\"600\"\n            value={title}\n            placeholder=\"Enter list title...\"\n            onKeyDown={this.handleKeyDown}\n            onChange={this.handleChange}\n            onBlur={this.handleSubmit}\n            spellCheck={false}\n            autoFocus\n          />\n        </Form>\n      </ClickOutside>\n    );\n  };\n}\n\nListTitleEdit.defaultProps = {\n  listId: '',\n  toggleEditTitle: () => {},\n};\n\nListTitleEdit.propTypes = {\n  listId: PropTypes.string.isRequired,\n  listTitle: PropTypes.string,\n  toggleEditTitle: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      editListTitle: editListTitle,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ListTitleEdit);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport ListTitleEdit from './ListTitleEdit';\nimport styled from 'styled-components';\n\nconst Title = styled.h2`\n  width: 100%;\n  padding: .3rem .5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\nTitle.displayName = 'Title';\n\n\nclass ListTitle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editTitle: false,\n    }\n  }\n\n  toggleEditTitle = () => {\n    this.setState({\n      editTitle: !this.state.editTitle\n    })\n  };\n\n  render() {\n    const { dragHandleProps, listId, listTitle } = this.props;\n    const { editTitle } = this.state;\n\n    return (\n      !editTitle ? (\n        <Title {...dragHandleProps} onClick={() => this.toggleEditTitle()}>\n          {listTitle}\n        </Title>\n      ) : (\n        <ListTitleEdit toggleEditTitle={this.toggleEditTitle} listId={listId} listTitle={listTitle} />\n      )\n    )\n  }\n}\n\nListTitle.defaultProps = {\n  listId: '',\n  listTitle: '',\n};\n\nListTitle.propTypes = {\n  listId: PropTypes.string.isRequired,\n  listTitle: PropTypes.string.isRequired,\n};\n\nexport default ListTitle;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome/index\";\nimport ListActions from './ListActions/ListActions';\nimport ListTitle from './ListTitle/ListTitle';\nimport styled from 'styled-components';\n\nconst Header = styled.div`\n  padding: .5rem .7rem 0rem .5rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Icon = styled.div`\n  cursor: pointer;\n`;\nIcon.displayName = 'Icon';\n\n\nclass ListHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n    }\n  }\n\n  toggleOpened = () => {\n    this.setState({ isOpened: !this.state.isOpened })\n  };\n\n  render() {\n    const { dragHandleProps, listId, listTitle, boardId } = this.props;\n    const { isOpened } = this.state;\n\n    return (\n      <>\n        <Header>\n          <ListTitle dragHandleProps={dragHandleProps} listId={listId} listTitle={listTitle} />\n          <Icon onClick={() => this.toggleOpened()}>\n            <FontAwesomeIcon icon=\"ellipsis-h\" />\n          </Icon>\n        </Header>\n        {isOpened && (\n          <ListActions toggleOpened={this.toggleOpened} boardId={boardId} listId={listId} />\n        )}\n      </>\n    )\n  }\n}\n\nListHeader.defaultProps = {\n  listTitle: '',\n};\n\nListHeader.propTypes = {\n  boardId: PropTypes.string,\n  listId: PropTypes.string,\n  listTitle: PropTypes.string.isRequired,\n};\n\nexport default ListHeader;\n","import * as t from '../../constants';\n\nexport const addCard = (fields) => ({\n  type: t.ADD_CARD,\n  payload: fields\n});\n\nexport const addLabelToCard = (fields) => ({\n  type: t.ADD_LABEL_TO_CARD,\n  payload: fields\n});\n\nexport const editCardTitle = (fields) => ({\n  type: t.EDIT_CARD_TITLE,\n  payload: fields\n});\n\nexport const editCardDesc = (fields) => ({\n  type: t.EDIT_CARD_DESCRIPTION,\n  payload: fields\n});\n\nexport const deleteCard = (fields) => ({\n  type: t.DELETE_CARD,\n  payload: fields\n});\n\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { addCard } from '../../redux/cardReducer/actions/actions';\nimport { TextArea, Actions, SubmitButton, CancelButton } from '../BaseComponent';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ClickOutside from \"../ClickOutside/ClickOutside\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  padding: .5rem;\n`;\n\nconst AddButton = styled.button`\n  text-align: left;\n  width: 100%;\n  padding: .5rem .75rem;\n  font-size: .875rem; \n  color: #6b778c;\n  transition: all .2s ease-in;\n  cursor: pointer;\n  &:hover {\n    color: #172b4d;\n    background-color: rgba(9,30,66,.13);\n  }\n`;\nAddButton.displayName = 'AddButton';\n\nclass CardAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n      title: '',\n    };\n    this.textarea = React.createRef();\n  }\n\n  toggleOpened = () => {\n    this.setState({\n      isOpened: !this.state.isOpened,\n      title: '',\n    })\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.toggleOpened();\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    if (!title)  return;\n    this.props.actions.addCard({\n      listId: this.props.listId,\n      cardTitle: title,\n      newCardId: Date.now().toString(),\n    });\n    this.setState({ title: '' }, () => {\n      if (!this.textarea.focus) return;\n      this.textarea.focus()\n    })\n  };\n\n  render = () => {\n    const { isOpened, title } = this.state;\n\n    return isOpened ? (\n      <ClickOutside action={'mousedown'} toggleOpened={this.toggleOpened}>\n        <Wrapper>\n          <form onSubmit={this.handleSubmit}>\n            <TextArea\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              size=\".875rem;\"\n              padding=\".5rem\"\n              rows={3}\n              placeholder=\"Enter a card title...\"\n              ref={(e) => { this.textarea = e }}\n              onKeyDown={this.handleKeyDown}\n              onChange={(e) => this.handleChange(e)}\n              spellCheck={false}\n              autoFocus\n            />\n            <Actions>\n              <SubmitButton type=\"submit\" disabled={!title}>\n                Create card\n              </SubmitButton>\n              <CancelButton onClick={() => this.toggleOpened()}>\n                <FontAwesomeIcon icon=\"times\"/>\n              </CancelButton>\n            </Actions>\n          </form>\n        </Wrapper>\n      </ClickOutside>\n    ) : (\n      <AddButton onClick={() => this.toggleOpened()}>\n        + Add another card\n      </AddButton>\n    );\n  };\n}\n\nCardAdd.propTypes = {\n  listId: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      addCard: addCard,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CardAdd);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst LabelList = styled.ul`\n  display: flex;\n`;\n\nconst LabelItem = styled.li`\n  width: 2rem;\n  height: 2rem;\n  margin-right: .5rem;\n  background-color: ${props => props.value};\n  border-radius: .2rem;\n`;\n\nconst Label = (props) => {\n  const { cardLabels } = props;\n  if (!cardLabels) return null;\n\n  return (\n    <LabelList className=\"label-list\">\n      {cardLabels.map((label, index) => (\n        <LabelItem key={index} value={label.color} />\n      ))}\n    </LabelList>\n  )\n};\n\nLabel.defaultProps = {\n  cardLabels: null\n};\n\nLabel.propTypes = {\n  cardLabels: PropTypes.arrayOf(\n    PropTypes.shape({\n      _labelId: PropTypes.number,\n      color: PropTypes.string.isRequired\n    })\n  ),\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from 'react-beautiful-dnd';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Label from \"../Label/Label\";\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative; \n  &:not(:last-child) {\n    margin-bottom: .5rem;\n  }  \n`;\n\nconst CardWrapper = styled.div`\n  padding: .5rem;\n  border-radius: .2rem;\n  background-color: #fff;\n  box-shadow: 0 1px 0 rgba(9,30,66,.25);  \n  transform: ${props => props.isDragging && 'rotate(3deg)'};\n  transition: background-color .2s ease-in;\n  &:hover {\n    background-color: #f4f5f7;\n  }  \n`;\n\nconst Title = styled.h3`\n  font-size: .875rem;\n  color: #40424b;\n  word-break: break-word;\n`;\n\nconst LabelList = styled.div`\n  .label-list {\n    margin-bottom: .3rem;\n  }\n  li {\n    height: .5rem;\n    width: 2.5rem;\n    border-radius: 1rem;\n    margin-right: .2rem;\n  }\n`;\n\nconst BadgeList = styled.div`\n  display: flex;\n \n`;\nBadgeList.displayName = 'BadgeList';\n\nconst BadgeItem = styled.div`\n  margin: .3rem 1rem 0 0;\n  padding: .2rem;\n  color: ${props => props.done ? '#fff' : '#6b778c'};\n  font-size: .75rem;\n  border-radius: .2rem;\n  background-color: ${props => props.done && '#61bd4f'}\n`;\n\nexport const CardBadges = (props) => {\n  const { card, checkLists } = props;\n  let allCheckListItems = 0, doneCheckListItems = 0;\n  card.checkLists.forEach(checklist => {\n    allCheckListItems += checkLists[checklist].items.length;\n    doneCheckListItems += checkLists[checklist].items.filter(item => !!item.status).length\n  });\n\n  return (\n    <BadgeList>\n      {!!card.description && (\n        <BadgeItem>\n          <FontAwesomeIcon icon=\"align-left\"/>\n        </BadgeItem>\n      )}\n      {!!allCheckListItems && (\n        <BadgeItem done={allCheckListItems === doneCheckListItems}>\n          <FontAwesomeIcon icon=\"check-square\"/> {doneCheckListItems}/{allCheckListItems}\n        </BadgeItem>\n      )}\n    </BadgeList>\n  )\n};\n\nconst Card = (props) => {\n  const { index, card, checkLists, currentBoardID, isDraggingOver } = props;\n  if (!card) return null;\n\n  return (\n    <Draggable index={index} draggableId={`${card._cardId}`}>\n      {(provided, snapshot) => (\n        <>\n          <Container\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{\n              ...provided.draggableProps.style,\n              background: card.color\n            }}\n          >\n            <CardWrapper isDragging={snapshot.isDragging}>\n              <NavLink to={`/b/${currentBoardID}/c/${card._cardId}`}>\n                <LabelList>\n                  <Label cardLabels={card.cardLabels} />\n                </LabelList>\n                <Title>\n                  {card.title}\n                </Title>\n                <CardBadges card={card} checkLists={checkLists} />\n              </NavLink>\n            </CardWrapper>\n          </Container>\n          {isDraggingOver && provided.placeholder}\n        </>\n      )}\n    </Draggable>\n  )\n};\n\nCard.defaultProps = {\n  card: null,\n  checkLists: []\n};\n\nCard.propTypes = {\n  currentBoardID: PropTypes.string.isRequired,\n  cardId: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  isDraggingOver: PropTypes.bool,\n  card: PropTypes.shape({\n    _cardId: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    checkLists: PropTypes.arrayOf(PropTypes.string).isRequired,\n    cardLabels: PropTypes.array.isRequired,\n  }).isRequired,\n  checkLists: PropTypes.objectOf(\n    PropTypes.shape({\n      _checkListId: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          status: PropTypes.bool.isRequired,\n          description: PropTypes.string,\n        })\n      )\n    })\n  ),\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    currentBoardID: state.rootReducer.currentBoardID,\n    card: state.cardReducer[ownProps.cardId],\n    checkLists: state.checkListReducer\n  }\n}\n\nexport default connect(mapStateToProps)(Card);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Droppable } from 'react-beautiful-dnd';\nimport Card from '../Card/Card';\nimport styled from 'styled-components';\n\nconst CardLIst = styled.div`\n  min-height: 2rem;\n  position: relative;\n  padding: .5rem;\n  flex-grow: 1;\n  overflow: auto;\n`;\n\nconst InnerList = (props) => {\n  const { cardsId, isDraggingOver } = props;\n  return cardsId.map((cardId, index) =>\n    <Card key={index} isDraggingOver={isDraggingOver} index={index} cardId={cardId} />\n  )\n};\n\nclass ListCards extends Component {\n  componentDidUpdate = prevProps => {\n    const { cardsId } = this.props;\n    if (cardsId[cardsId.length - 2] === prevProps.cardsId[prevProps.cardsId.length - 1]) {\n      this.scrollToBottom();\n    }\n  };\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView();\n  };\n\n  render() {\n    const { listId, cardsId } = this.props;\n\n    return (\n      <Droppable type={'task'} droppableId={`${listId}`}>\n        {(provided, { isDraggingOver }) => (\n          <CardLIst\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            isDraggingOver={isDraggingOver}\n          >\n            <InnerList isDraggingOver={isDraggingOver} cardsId={cardsId} />\n            {provided.placeholder}\n            <div ref={el => this.listEnd = el}/>\n          </CardLIst>\n        )}\n      </Droppable>\n    )\n  }\n}\n\nListCards.defaultProps = {\n  cardsId: [],\n};\n\nListCards.propTypes = {\n  listId: PropTypes.string.isRequired,\n  cardsId: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ListCards;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from 'react-beautiful-dnd';\nimport ListHeader from './ListHeader'\nimport CardAdd from '../Card/CardAdd';\nimport ListCards from './ListCards';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  max-height: 83vh;\n  width: 16rem;\n  margin: 0 .5rem;\n  background-color: #dfe1e6;\n  border-radius: .2rem;\n`;\n\nconst List = (props) => {\n  const {  boardId, list, index } = props;\n  if (!list) return null;\n\n  return (\n    <Draggable index={index} draggableId={`${list._listId}`}>\n      {(provided) => (\n        <>\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\n            <ListHeader\n              dragHandleProps={provided.dragHandleProps}\n              boardId={boardId}\n              listId={list._listId}\n              listTitle={list.title}\n            />\n            <ListCards listId={list._listId} cardsId={list.cards} />\n            <CardAdd listId={list._listId} />\n          </Container>\n          {provided.placeholder}\n        </>\n      )}\n    </Draggable>\n  )\n};\n\nList.defaultProps = {\n  boardId: '',\n  listId: '',\n  list: null\n};\n\nList.propTypes = {\n  index: PropTypes.number,\n  boardId: PropTypes.string.isRequired,\n  listId: PropTypes.string.isRequired,\n  list: PropTypes.shape({\n    _listId: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    cards: PropTypes.arrayOf(PropTypes.string).isRequired\n  }).isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    list: state.listReducer[ownProps.listId],\n  }\n}\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setCurrentBoardID } from \"../redux/rootReducer/actions/actions\";\nimport { moveList } from \"../redux/boardReducer/actions/actions\";\nimport { moveCard } from \"../redux/listReducer/actions/actions\";\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Redirect } from \"react-router\";\nimport BoardHeader from '../components/Board/BoardHeader';\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport ListAdd from '../components/List/ListAdd';\nimport List from '../components/List/List'\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 100%;\n  padding-top: .5rem;\n  background-color: ${props => props.color};\n  transition: background-color .2s ease-in;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-shrink: 0;\n  height: 92%;\n  max-width: 100vw;\n  padding: 0 1rem 1rem;\n  overflow: auto;\n`;\n\nexport const InnerList = (props) => {\n  const { boardId, listsId, } = props;\n  return (\n    listsId.map((listId, index) => (\n      <List key={index} index={index} boardId={boardId} listId={listId} />\n    ))\n  )\n};\n\nclass Board extends Component {\n  componentDidMount() {\n    const boardId = this.props.match.params.boardId;\n    this.props.actions.setCurrentBoardID(boardId);\n  }\n\n  componentWillUnmount() {\n    this.props.actions.setCurrentBoardID(null)\n  }\n\n  handleDragEnd = (result) => {\n    const { destination, source, type } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) return;\n\n    if (type === 'column') {\n      this.props.actions.moveList({\n        boardId: this.props.board._boardId,\n        sourceIndex: source.index,\n        destinationIndex: destination.index,\n      });\n    }\n\n    if (type === 'task') {\n      this.props.actions.moveCard({\n        sourceIndex: source.index,\n        sourceListIndex: source.droppableId,\n        destinationIndex: destination.index,\n        destinationListIndex: destination.droppableId,\n      });\n    }\n  };\n\n  render() {\n    const { board, currentBoardId } = this.props;\n    if (!currentBoardId) return null;\n    if (!board) return <Redirect to='/' />;\n\n    return (\n      <Wrapper color={board.color}>\n        <BoardHeader boardId={board._boardId} />\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n          <Droppable type='column' droppableId={board._boardId} direction='horizontal'>\n            {(provided) => (\n              <Container {...provided.droppableProps} ref={provided.innerRef}>\n                <InnerList boardId={board._boardId} listsId={board.lists} />\n                {provided.placeholder}\n                <ListAdd boardId={board._boardId} />\n              </Container>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <Sidebar />\n      </Wrapper>\n    )\n  }\n}\n\nBoard.propTypes = {\n  isSidebarOpened: PropTypes.bool,\n  currentBoardId: PropTypes.string,\n  board: PropTypes.shape({\n    _boardId: PropTypes.string,\n    title: PropTypes.string,\n    color: PropTypes.string,\n    lists: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isSidebarOpened: state.rootReducer.isSidebarOpened,\n    currentBoardId: state.rootReducer.currentBoardID,\n    board: state.boardReducer[state.rootReducer.currentBoardID],\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      setCurrentBoardID: setCurrentBoardID,\n      moveList: moveList,\n      moveCard: moveCard,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import * as t from '../../constants';\n\nexport const addCheckList = (fields) => ({\n  type: t.ADD_CHECKLIST,\n  payload: fields\n});\n\nexport const addCheckListItem = (fields) => ({\n  type: t.ADD_CHECKLIST_ITEM,\n  payload: fields\n});\n\nexport const editCheckListTitle = (fields) => ({\n  type: t.EDIT_CHECKLIST_TITLE,\n  payload: fields\n});\n\nexport const updateCheckListItem = (fields) => ({\n  type: t.UPDATE_CHECKLIST_ITEM,\n  payload: fields\n});\n\nexport const deleteCheckList = (fields) => ({\n  type: t.DELETE_CHECKLIST,\n  payload: fields\n});\n\nexport const deleteCheckListItem = (fields) => ({\n  type: t.DELETE_CHECKLIST_ITEM,\n  payload: fields\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addCheckList } from \"../../redux/checkListReducer/actions/actions\";\nimport { Input, SubmitButton } from \"../BaseComponent\";\n\nclass CheckListAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    if (!title) return;\n    this.props.actions.addCheckList({\n      checkListTitle: title,\n      cardId: this.props.cardId,\n      checkListId: Date.now().toString()\n    });\n    this.props.toggleTooltip()\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form>\n        <Input\n          autoFocus\n          type=\"text\"\n          placeholder=\"Add checklist title\"\n          value={title}\n          onChange={this.handleChange}\n          spellCheck={false}\n        />\n        <SubmitButton onClick={this.handleSubmit} disabled={!title}>\n          Add\n        </SubmitButton>\n      </form>\n    )\n  };\n}\n\nCheckListAdd.defaultProps = {\n  toggleTooltip: () => {}\n};\n\nCheckListAdd.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  toggleTooltip: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      addCheckList: addCheckList,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CheckListAdd);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { deleteCard } from '../../redux/cardReducer/actions/actions';\nimport { Text, SubmitButton } from '../BaseComponent';\nimport { history } from \"../../redux/store\";\n\nclass CardDelete extends Component {\n  deleteCard = () => {\n    const { listId, cardId, currentBoardID } = this.props;\n    this.props.actions.deleteCard({\n      listId: listId,\n      cardId: cardId,\n    });\n    history.push(`/b/${currentBoardID}`)\n  };\n\n  render() {\n    return (\n      <>\n        <Text>\n          All actions will be removed from the activity feed and you won’t be able to re-open the card.\n          There is no undo.\n        </Text>\n        <SubmitButton color='danger' onClick={() => this.deleteCard()}>\n          Delete card\n        </SubmitButton>\n      </>\n    );\n  }\n}\n\nCardDelete.propTypes = {\n  currentBoardID: PropTypes.string.isRequired,\n  listId: PropTypes.string.isRequired,\n  cardId: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    currentBoardID: state.rootReducer.currentBoardID,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      deleteCard: deleteCard,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDelete);\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { addLabelToCard } from \"../../redux/cardReducer/actions/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst LabelList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0 .5rem;\n`;\n\nconst LabelItem = styled.li`\n  position: relative;\n  height: 2.25rem;\n  width: 100%;\n  margin-bottom: .3rem;\n  background-color: ${props => props.value};\n  cursor: pointer;\n  border-radius: .2rem;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0; \n    bottom: 0; \n    left: 0;\n    width: .6rem;\n    border-radius: .2rem 0 0 .2rem;\n    background-color: ${props => props.value};\n    box-shadow: inset 2rem 0 rgba(0, 0, 0, .2);\n    transition: transform .2s ease-in-out;\n    z-index: -1;\n  }\n  &:hover {\n    &:before {\n      transform: translateX(-90%);\n    }\n  }\n`;\n\nconst LabelIcon = styled.div`\n  color: #fff;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  font-size: 1rem;\n  transform: translate(-50%, -50%);\n`;\n\nclass LabelAdd extends Component {\n  addLabel = (label) => {\n    this.props.actions.addLabelToCard({\n      cardId: this.props.cardId,\n      cardLabel: label\n    })\n  };\n\n  render() {\n    const { cardLabels, labels } = this.props;\n    if (!labels) return null;\n\n    return (\n      <LabelList>\n        {labels.map((label, index) => (\n          <LabelItem key={index} value={label.color} onClick={() => this.addLabel(label)}>\n            {cardLabels && cardLabels.some(cardLabel => cardLabel._labelId === label._labelId) && (\n              <LabelIcon>\n                <FontAwesomeIcon icon=\"check\" />\n              </LabelIcon>\n            )}\n          </LabelItem>\n        ))}\n      </LabelList>\n    )\n  };\n}\n\nLabelAdd.propTypes = {\n  labels: PropTypes.arrayOf(\n    PropTypes.shape({\n      _labelId: PropTypes.number.isRequired,\n      color: PropTypes.string.isRequired\n    })\n  ),\n  cardLabels: PropTypes.arrayOf(\n    PropTypes.shape({\n      _labelId: PropTypes.number.isRequired,\n      color: PropTypes.string\n    })\n  ),\n};\n\nfunction mapStateToProps(state) {\n  return {\n    labels: state.rootReducer.labels,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      addLabelToCard: addLabelToCard,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabelAdd);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ClickOutside from \"../ClickOutside/ClickOutside\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 2.5rem;\n  left: 0;\n  width: 17rem;\n  background-color: #F4F5F7;\n  border-radius: .2rem;\n  box-shadow: rgba(0, 0, 0, 0.3) .125rem .125rem .5rem;\n  z-index: 10;\n  @media (max-width: 910px) {\n    right: 0;\n    left: auto;\n  }\n`;\n\nconst Header = styled.div`\n  position: relative;\n  padding: .5rem;\n  border-bottom: 1px solid rgba(9,30,66,.13);\n`;\n\nconst Title = styled.h4`\n  font-size: 1rem;\n  color: #6b778c;\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  top: .5rem;\n  right: .5rem;\n  font-size: 1rem;\n  color: #6b778c;\n  transition: color .1s ease-in;\n  &:hover {\n    color: #42526e;\n  }\n`;\nButton.displayName = 'Button';\n\nconst Body = styled.div`\n   padding: .5rem;\n`;\n\nclass CardTooltip extends Component {\n  componentDidMount() {\n    document.addEventListener('keydown', this.outerClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.outerClick);\n  }\n\n  outerClick = (e) => {\n    const { isOpened } = this.props;\n    if (!isOpened) return null;\n    if (e.keyCode === 27) {\n      this.props.toggleTooltip(null);\n    }\n    return null;\n  };\n\n  render() {\n    const { title, body, isOpened } = this.props;\n    if (!isOpened) return null;\n\n    return (\n      <ClickOutside toggleOpened={this.props.toggleTooltip}>\n        <Wrapper>\n          <Header>\n            <Title>\n              {title}\n            </Title>\n            <Button onClick={() => this.props.toggleTooltip()}>\n              <FontAwesomeIcon icon=\"times\" />\n            </Button>\n          </Header>\n          <Body>\n            {body}\n          </Body>\n        </Wrapper>\n      </ClickOutside>\n    )\n  }\n}\n\nCardTooltip.defaultProps = {\n  title: '',\n  isOpened: false,\n  toggleTooltip: () => {},\n};\n\nCardTooltip.propTypes = {\n  isOpened: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  toggleTooltip: PropTypes.func.isRequired,\n  body: PropTypes.element.isRequired,\n};\n\nexport default CardTooltip;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport CardChecklistAdd from '../Checklist/CheckListAdd';\nimport CardDelete from '../Card/CardDelete';\nimport LabelAdd from '../Label/LabelAdd';\nimport CardTooltip from './CardTooltip';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  padding: .5rem 0;\n  :not(:last-child) {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst Title = styled.h4`\n  margin-bottom: .5rem;\n  font-size: .75rem;\n  color: #6b778c;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nconst ActionList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\nActionList.displayName = 'ActionList';\n\nconst ActionItem = styled.li`\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: .5rem;\n  }\n`;\n\nconst Link = styled.a`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: .5rem .75rem;\n  font-size: .875rem;\n  font-weight: 600;\n  border-radius: .2rem;\n  text-align: left;\n  background-color: #ebecf0;\n  box-shadow: 0 1px 0 0 rgba(9, 30, 66, .13);\n  transition: all .2s ease-in;\n  cursor: pointer;\n  &:hover {\n    background-color: #dfe1e6;\n    box-shadow: 0 1px 0 0 rgba(9, 30, 66, .25);\n  }\n`;\nLink.displayName = 'Link';\n\nconst Icon = styled.div`\n  margin-right: .5rem;\n`;\n\nclass CardActions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: null\n    }\n  }\n\n  toggleIsOpened = (key) => {\n    this.setState({\n      isOpened: key !== this.state.isOpened ? key : null\n    })\n  };\n\n  render() {\n    const { listId, card, title, actions } = this.props;\n    const { isOpened } = this.state;\n    if (!card) return null;\n\n    let actionItems = [\n      {\n        title: 'Label',\n        icon: 'tag',\n        component: (\n          <LabelAdd cardId={card._cardId} cardLabels={card.cardLabels} />\n        )\n      },\n      {\n        title: 'CheckList',\n        icon: 'check-square',\n        component: (\n          <CardChecklistAdd\n            cardId={card._cardId}\n            toggleTooltip={() => this.toggleIsOpened('CheckList')}\n          />\n        )\n      },\n      {\n        title: 'Delete',\n        icon: 'trash',\n        component: (\n          <CardDelete\n            cardId={card._cardId}\n            listId={listId}\n            toggleTooltip={() => this.toggleIsOpened('Delete')}\n          />\n        )\n      },\n    ];\n\n    actionItems = actionItems.filter(item => actions.some(title => title === item.title));\n\n    return (\n      <Wrapper>\n        <Title>\n          {title}\n        </Title>\n        <ActionList>\n          {actionItems.map((action, index) => (\n            <ActionItem key={index}>\n              <Link onClick={() => this.toggleIsOpened(action.title)}>\n                <Icon>\n                  <FontAwesomeIcon icon={action.icon} />\n                </Icon>\n                {action.title}\n              </Link>\n              <CardTooltip\n                title={action.title}\n                isOpened={isOpened === action.title}\n                toggleTooltip={() => this.toggleIsOpened(action.title)}\n                body={action.component}\n              />\n            </ActionItem>\n          ))}\n        </ActionList>\n      </Wrapper>\n    )\n  }\n}\n\nCardActions.defaultProps = {\n  card: null,\n  title: '',\n  actions: [],\n};\n\nCardActions.propTypes = {\n  card: PropTypes.shape({\n    _cardId: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    checkLists: PropTypes.arrayOf(PropTypes.string),\n    cardLabels: PropTypes.array,\n  }).isRequired,\n  listId: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default CardActions;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin-bottom: .75rem;\n  padding-left: 2rem;\n`;\n\nconst ProgressBar = styled.div`\n  position: relative;\n  height: .6rem;\n  background-color: rgba(9,30,66,.08);\n  border-radius: .5rem;\n  overflow: hidden;\n`;\n\nconst Progress = styled.div`\n  position: absolute;\n  display: block;\n  width: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  background-color: ${props => !!props.color ? props.color : '#5ba4cf'};\n  width: ${props => props.width}%;\n  transition: width 0.2s ease-in-out;\n`;\nProgress.displayName = 'Progress';\n\nconst Label = styled.div`\n  position: absolute;\n  top: -.25rem;\n  right: calc(100% - 1.75rem);\n  font-size: .75rem;\n  color: #6b778c;\n  white-space: nowrap;\n`;\n\nconst CheckListProgress = (props) => {\n  let color, width = 0;\n  const { items } = props;\n  if (!items) return null;\n\n  const allItems = items.length;\n  const doneItems = items.filter(item => !!item.status).length;\n\n  if (!!allItems) width = (doneItems * 100) / allItems;\n  if (allItems === doneItems) color = '#61bd4f';\n\n  return (\n    <Wrapper>\n      <ProgressBar>\n        <Progress width={width} color={color} />\n      </ProgressBar>\n      <Label>{width.toFixed()} %</Label>\n    </Wrapper>\n  );\n};\n\nCheckListProgress.defaultProps = {\n  items: null\n};\n\nCheckListProgress.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      status: PropTypes.bool.isRequired,\n      description: PropTypes.string,\n    })\n  )\n};\n\nexport default CheckListProgress;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { addCheckListItem } from '../../../redux/checkListReducer/actions/actions';\nimport { Actions, Input, SubmitButton, CancelButton } from '../../BaseComponent';\nimport ClickOutside from \"../../ClickOutside/ClickOutside\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  padding-left: 2rem;\n`;\n\nconst AddButton = styled.button`\n  padding: .5rem 1rem;\n  font-size: .875rem;\n  color: #172b4d;\n  background-color: rgba(9, 30, 66, .08);\n  border-radius: 3px;\n  transition: background-color .2s ease-in;\n  &:hover {\n    background-color: rgba(9,30,66,.13);\n  }\n`;\nAddButton.displayName = 'AddButton';\n\nclass CheckListItemAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n      title: '',\n    };\n  }\n\n  toggleOpened = () => {\n    this.setState({\n      isOpened: !this.state.isOpened,\n      title: '',\n    })\n  };\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.toggleOpened();\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    if (!title)  return;\n    this.props.actions.addCheckListItem({\n      checkListId: this.props.checkListId,\n      checkListTitle: title,\n    });\n    this.toggleOpened()\n  };\n\n  render = () => {\n    const { isOpened, title } = this.state;\n\n    return isOpened ? (\n      <ClickOutside toggleOpened={this.toggleOpened}>\n        <Wrapper>\n          <form>\n            <Input\n              type=\"text\"\n              size=\".875rem\"\n              padding=\".5rem\"\n              placeholder=\"Enter a card title...\"\n              value={title}\n              onKeyDown={this.handleKeyDown}\n              onChange={this.handleChange}\n              spellCheck={false}\n              autoFocus\n            />\n            <Actions>\n              <SubmitButton onClick={(e) => this.handleSubmit(e)} disabled={!title}>\n                Save\n              </SubmitButton>\n              <CancelButton onClick={() => this.toggleOpened()}>\n                <FontAwesomeIcon icon=\"times\" />\n              </CancelButton>\n            </Actions>\n          </form>\n        </Wrapper>\n      </ClickOutside>\n    ) : (\n      <Wrapper>\n        <AddButton onClick={() => this.toggleOpened()}>\n          Add a item\n        </AddButton>\n      </Wrapper>\n    );\n  };\n}\n\nCheckListItemAdd.propTypes = {\n  checkListId: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      addCheckListItem: addCheckListItem,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CheckListItemAdd);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { editCheckListTitle } from '../../../redux/checkListReducer/actions/actions';\nimport ClickOutside from \"../../ClickOutside/ClickOutside\";\nimport { Input, } from '../../BaseComponent';\n\nclass CheckListTitleEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.checkListTitle || '',\n    };\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.props.toggleEditTitle()\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    const { actions } = this.props;\n    if (!title)  return;\n    actions.editCheckListTitle({\n      checkListId: this.props.checkListId,\n      checkListTitle: title,\n    });\n    this.props.toggleEditTitle()\n  };\n\n  render = () => {\n    const { title } = this.state;\n\n    return (\n      <ClickOutside toggleOpened={this.props.toggleEditTitle}>\n        <form onSubmit={this.handleSubmit}>\n          <Input\n            type=\"text\"\n            padding=\".3rem .5rem\"\n            margin=\"0\"\n            size=\"1.2rem\"\n            weight=\"600\"\n            value={title}\n            placeholder=\"Enter list title...\"\n            onKeyDown={this.handleKeyDown}\n            onChange={this.handleChange}\n            onBlur={this.handleSubmit}\n            spellCheck={false}\n            autoFocus\n          />\n        </form>\n      </ClickOutside>\n    );\n  };\n}\n\nCheckListTitleEdit.defaultProps = {\n  toggleEditTitle: () => {},\n};\n\nCheckListTitleEdit.propTypes = {\n  checkListId: PropTypes.string.isRequired,\n  checkListTitle: PropTypes.string,\n  toggleEditTitle: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      editCheckListTitle: editCheckListTitle,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CheckListTitleEdit);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport CheckListTitleEdit from './CheckListTitleEdit';\nimport styled from 'styled-components';\n\nconst Title = styled.h3`\n  padding: .3rem .5rem;\n  font-size: 1.2rem;\n  font-weight: 600;\n`;\nTitle.displayName = 'Title';\n\nclass CheckListTitle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editTitle: false,\n    }\n  }\n\n  toggleEditTitle = () => {\n    this.setState({\n      editTitle: !this.state.editTitle\n    })\n  };\n\n  render() {\n    const { checkListId, checkListTitle} = this.props;\n    const { editTitle } = this.state;\n\n    return (\n      !editTitle ? (\n          <Title onClick={() => this.toggleEditTitle()}>\n            {checkListTitle}\n          </Title>\n        ) : (\n          <CheckListTitleEdit\n            toggleEditTitle={this.toggleEditTitle}\n            checkListTitle={checkListTitle}\n            checkListId={checkListId}\n          />\n        )\n    );\n  }\n}\n\nCheckListTitle.defaultProps = {\n  checkListTitle: '',\n};\n\nCheckListTitle.propTypes = {\n  checkListId: PropTypes.string.isRequired,\n  checkListTitle: PropTypes.string.isRequired,\n};\n\nexport default CheckListTitle;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateCheckListItem, deleteCheckListItem } from '../../../redux/checkListReducer/actions/actions';\nimport { CheckBox } from '../../BaseComponent';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst HideCheckBox = styled.input`\n  display: none;\n`;\n\nconst Description = styled.div`\n  font-size: .875rem;\n  color: ${props => props.status ? '#6b778c' : 'initial'}\n  font-style: ${props => props.status ? 'italic' : 'normal'}\n  text-decoration: ${props => props.status ? 'line-through' : 'none'}\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  left: 100%;\n  top: 50%;\n  font-size: 1rem;\n  color: #e44979;\n  cursor: pointer;\n  transition: all 0.2s ease-in;\n  transform: translate(0, -50%);\n`;\nButton.displayName = 'Button';\n\nconst Wrapper = styled.label`\n  position: relative;\n  display: flex;\n  padding: .5rem;\n  border-radius: .2rem;\n  transition: background-color .2s ease-in;\n  cursor: pointer;\n  overflow: hidden;\n  &:hover {\n    background-color: rgba(9, 30, 66, .08);\n    ${Button} {\n      transform: translate(-105%, -50%);\n    }\n  }\n`;\n\nclass CheckListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: props.status || false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ status: this.props.status });\n    }\n  }\n\n  handleDelete = () => {\n    this.props.actions.deleteCheckListItem({\n      checkListId: this.props.checkListId,\n      checkListItemIndex: this.props.index,\n    })\n  };\n\n  handleStatus = () => {\n    this.setState({\n      status: !this.state.status\n    }, () => {\n      this.props.actions.updateCheckListItem({\n        checkListId: this.props.checkListId,\n        checkListItemIndex: this.props.index,\n        status: this.state.status,\n      })\n    })\n  };\n\n  render() {\n    const { description, hideCompletedItems } = this.props;\n    const { status } = this.state;\n    if (hideCompletedItems && status) return null;\n\n    return (\n      <Wrapper onClick={(e) => e.stopPropagation()}>\n        <CheckBox status={status}>\n          <span>\n            <svg width=\"10px\" height=\"8px\" viewBox=\"0 0 12 10\">\n              <polyline points=\"1.5 6 4.5 9 10.5 1\" />\n            </svg>\n          </span>\n        </CheckBox>\n        <HideCheckBox\n          type=\"checkbox\"\n          onChange={() => this.handleStatus()}\n          checked={status}\n        />\n        <Description status={status}>\n          {description}\n        </Description>\n        <Button type=\"button\" onClick={() => this.handleDelete()}>\n          <FontAwesomeIcon icon=\"times\"/>\n        </Button>\n      </Wrapper>\n    );\n  }\n}\n\nCheckListItem.defaultProps = {\n  status: false,\n  description: '',\n  hideCompletedItems: false,\n};\n\nCheckListItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  checkListId: PropTypes.string.isRequired,\n  status: PropTypes.bool.isRequired,\n  description: PropTypes.string.isRequired,\n  hideCompletedItems: PropTypes.bool.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      updateCheckListItem: updateCheckListItem,\n      deleteCheckListItem: deleteCheckListItem,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CheckListItem);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { deleteCheckList } from '../../redux/checkListReducer/actions/actions';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CheckListProgress from './CheckListProgress';\nimport CheckListItemAdd from './CheckListItem/CheckListItemAdd';\nimport CheckListTitle from './CheckListTitle/CheckListTitle';\nimport CheckListItem from './CheckListItem/CheckListItem';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst Header = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-gap: .5rem;\n  align-items: flex-start;\n  position: relative;\n  margin-bottom: .5rem;\n  padding-left: calc(2rem - .5rem);\n`;\n\nconst Icon = styled.div`\n  position: absolute;\n  left: 0;\n  top: .45rem;\n  font-size: 1rem;\n`;\n\nconst CheckListContainer = styled.div`\n  margin-bottom: .5rem;\n`;\nCheckListContainer.displayName = 'CheckListContainer';\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst Button = styled.button`\n  padding: .5rem 1rem;\n  color: #172b4d;\n  background-color: rgba(9, 30, 66, .08);\n  border-radius: 3px;\n  transition: background-color .2s ease-in;\n  &:hover {\n    background-color: rgba(9,30,66,.13);\n  }\n  &:not(:first-child) {\n    margin-left: .5rem;\n  }\n`;\nButton.displayName = 'Button';\n\nclass CheckList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompletedItems: false,\n    }\n  }\n\n  deleteCheckList = () => {\n    this.props.actions.deleteCheckList({\n      cardId: this.props.cardId,\n      checkListId: this.props.checkList._checkListId,\n    })\n  };\n\n  toggleHideCompletedItems = () => {\n    this.setState({\n      hideCompletedItems: !this.state.hideCompletedItems\n    })\n  };\n\n  render() {\n    const { checkList } = this.props;\n    const { hideCompletedItems } = this.state;\n\n    if (!checkList) return null;\n\n    const doneItems = checkList.items.filter(items => !!items.status).length;\n\n    return (\n      <Container>\n        <Header>\n          <Icon>\n            <FontAwesomeIcon icon=\"check-square\" />\n          </Icon>\n          <CheckListTitle checkListTitle={checkList.title} checkListId={checkList._checkListId} />\n          <Button onClick={() => this.deleteCheckList()}>\n            Delete\n          </Button>\n        </Header>\n        <CheckListProgress items={checkList.items} />\n        <CheckListContainer>\n          {checkList.items.map((item, index) => (\n            <CheckListItem\n              key={index}\n              index={index}\n              status={item.status}\n              hideCompletedItems={hideCompletedItems}\n              description={item.description}\n              checkListId={checkList._checkListId}\n            />\n          ))}\n        </CheckListContainer>\n        <Actions>\n          <CheckListItemAdd checkListId={checkList._checkListId} />\n          {!!doneItems && (\n            <Button onClick={() => this.toggleHideCompletedItems()}>\n              {!hideCompletedItems\n                ? 'Hide completed items'\n                : `Show checked items (${doneItems})`\n              }\n            </Button>\n          )}\n        </Actions>\n      </Container>\n    );\n  }\n}\n\nCheckList.defaultProps = {\n  checkLists: null,\n};\n\nCheckList.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  checkListId: PropTypes.string.isRequired,\n  checkList: PropTypes.shape({\n    _checkListId: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        status: PropTypes.bool.isRequired,\n        description: PropTypes.string,\n      })\n    ).isRequired\n  })\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    checkList: state.checkListReducer[ownProps.checkListId],\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      deleteCheckList: deleteCheckList,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckList);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { editCardTitle } from '../../../redux/cardReducer/actions/actions';\nimport ClickOutside from '../../ClickOutside/ClickOutside';\nimport { Input, } from '../../BaseComponent';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  width: calc(100% - 2rem);\n`;\n\nclass CardTitleEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.cardTitle || '',\n    };\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.props.toggleEditTitle();\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    const { cardId } = this.props;\n    if (!title)  return;\n    this.props.actions.editCardTitle({\n      cardTitle: title,\n      cardId: cardId,\n    });\n    this.props.toggleEditTitle()\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <ClickOutside toggleOpened={this.props.toggleEditTitle}>\n        <Form onSubmit={this.handleSubmit}>\n          <Input\n            type=\"text\"\n            margin=\"0\"\n            padding=\".3rem .5rem\"\n            size=\"1.4rem\"\n            weight=\"600\"\n            value={title}\n            placeholder=\"Edit card title\"\n            onKeyDown={this.handleKeyDown}\n            onChange={this.handleChange}\n            onBlur={this.handleSubmit}\n            spellCheck={false}\n            autoFocus\n          />\n        </Form>\n      </ClickOutside>\n    );\n  };\n}\n\nCardTitleEdit.defaultProps = {\n  cardId: '',\n  toggleEditTitle: () => {},\n};\n\nCardTitleEdit.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  cardTitle: PropTypes.string,\n  toggleEditTitle: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      editCardTitle: editCardTitle,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CardTitleEdit);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport CardTitleEdit from './CardTitleEdit';\nimport styled from 'styled-components';\n\nconst Title = styled.h2`\n  margin-bottom: .5rem;\n  padding: .3rem .5rem;\n  font-size: 1.4rem;\n  font-weight: 600;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\nTitle.displayName = 'Title';\n\nclass CardTitle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editTitle: false,\n    }\n  }\n\n  toggleEditTitle = () => {\n    this.setState({\n      editTitle: !this.state.editTitle\n    })\n  };\n\n  render() {\n    const { cardId, cardTitle } = this.props;\n    const { editTitle } = this.state;\n\n    return (\n      !editTitle ? (\n        <Title onClick={() => this.toggleEditTitle()}>\n          {cardTitle}\n        </Title>\n      ) : (\n        <CardTitleEdit\n          cardId={cardId}\n          cardTitle={cardTitle}\n          toggleEditTitle={this.toggleEditTitle}\n        />\n      )\n    )\n  }\n}\n\nCardTitle.defaultProps = {\n  cardId: '',\n  cardTitle: '',\n};\n\nCardTitle.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  cardTitle: PropTypes.string.isRequired,\n};\n\nexport default CardTitle;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { editCardDesc } from '../../../redux/cardReducer/actions/actions';\nimport { Actions, CancelButton, SubmitButton, TextArea } from '../../BaseComponent';\nimport ClickOutside from '../../ClickOutside/ClickOutside';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst textareaLineHeight = 16;\n\nclass CardDescriptionEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: props.cardDescription || '',\n      rows: 2,\n      minRows: 2,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      rows: ~~(this.textarea.scrollHeight / textareaLineHeight)\n    })\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      this.props.toggleEditDescription()\n    }\n  };\n\n  handleChange = (e) => {\n    const { minRows } = this.state;\n    const previousRows = e.target.rows;\n    e.target.rows = minRows; // reset number of rows in textarea\n    e.target.style.overflow = 'hidden'; //overflow because scrollbar affects e.target.scrollHeight\n    const currentRows = ~~(e.target.scrollHeight / textareaLineHeight);\n    if (currentRows === previousRows) {\n      e.target.rows = currentRows;\n    }\n    this.setState({\n      description: e.target.value,\n      rows: currentRows,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { description } = this.state;\n    const { cardId } = this.props;\n    this.props.actions.editCardDesc({\n      cardDescription: description,\n      cardId: cardId,\n    });\n    this.props.toggleEditDescription()\n  };\n\n  render() {\n    const { description, rows } = this.state;\n\n    return (\n      <ClickOutside toggleOpened={this.props.toggleEditDescription}>\n        <form>\n          <TextArea\n            type=\"text\"\n            size=\".875rem;\"\n            padding=\".5rem\"\n            value={description}\n            rows={rows}\n            placeholder=\"Edit card description\"\n            ref={(e) => { this.textarea = e }}\n            onKeyDown={this.handleKeyDown}\n            onChange={this.handleChange}\n            autoFocus\n            spellCheck={false}\n          />\n          <Actions>\n            <SubmitButton onClick={this.handleSubmit}>\n              Save\n            </SubmitButton>\n            <CancelButton onClick={() => this.props.toggleEditDescription()}>\n              <FontAwesomeIcon icon=\"times\" />\n            </CancelButton>\n          </Actions>\n        </form>\n      </ClickOutside>\n    );\n  };\n}\n\nCardDescriptionEdit.defaultProps = {\n  cardId: '',\n  toggleEditDescription: () => {},\n};\n\nCardDescriptionEdit.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string,\n  toggleEditDescription: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      editCardDesc: editCardDesc,\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CardDescriptionEdit);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport CardDescriptionEdit from './CardDescriptionEdit';\nimport styled from 'styled-components';\n\nconst Description = styled.p`\n  font-size: .875rem;\n  word-break: break-word;\n  white-space: pre-line;\n  cursor: pointer;\n`;\n\nconst AddDescription = styled.a`\n  display: flex;\n  padding: .5rem .75rem;\n  width: 100%;\n  min-height: 4rem;\n  font-size: .875rem;\n  text-align: left;\n  background-color: rgba(9, 30, 66, .08);\n  border-radius: 3px;\n  transition: background-color .2s ease-in;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(9,30,66,.13);\n  }\n`;\nAddDescription.displayName = 'AddDescription';\n\nconst Button = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: .5rem 1rem;\n  background-color: rgba(9, 30, 66, .08);\n  border-radius: 3px;\n  transition: background-color .2s ease-in;\n  &:hover {\n    background-color: rgba(9,30,66,.13);\n  }\n`;\n\nclass CardDescription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editDescription: false,\n    }\n  }\n\n  toggleEditDescription = () => {\n    this.setState({\n      editDescription: !this.state.editDescription\n    })\n  };\n\n  render() {\n    const { cardId, cardDescription } = this.props;\n    const { editDescription } = this.state;\n\n    if (!cardDescription && !editDescription) {\n      return (\n        <AddDescription onClick={() => this.toggleEditDescription()}>\n          Add a more detailed description...\n        </AddDescription>\n      )\n    }\n\n    return (\n      !editDescription ? (\n        <Description>\n          {cardDescription}\n          <Button onClick={() => this.toggleEditDescription()}>\n            Edit\n          </Button>\n        </Description>\n      ) : (\n        <CardDescriptionEdit\n          cardId={cardId}\n          cardDescription={cardDescription}\n          toggleEditDescription={this.toggleEditDescription}\n        />\n      )\n    )\n  }\n}\n\nCardDescription.defaultProps = {\n  cardId: '',\n  cardDescription: '',\n};\n\nCardDescription.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n};\n\nexport default CardDescription;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { history } from \"../redux/store\";\nimport { Redirect } from \"react-router\";\nimport CardActions from \"../components/CardModal/CardActions\";\nimport CheckList from \"../components/Checklist/CheckList\";\nimport CardTitle from \"../components/CardModal/CardTitle/CardTitle\";\nimport CardDescription from \"../components/CardModal/CardDescription/CardDescription\";\nimport Label from \"../components/Label/Label\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from 'styled-components';\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n`;\n\nconst CloseBackdrop = styled.button`\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  background: transparent;\n  border: none;\n  outline: none;\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 5rem;\n  left: 50%;\n  max-width: 45rem;\n  width: 100%;\n  max-height: calc(100% - 8rem);\n  padding: 1rem;\n  border-radius: .2rem;\n  background-color: #f4f5f7;\n  transform: translateX(-50%);\n  @media (max-width: 770px) {\n    left: 1rem;\n    right: 1rem;\n    width: auto;\n    transform: translateX(0);\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  color: #6b778c;\n  font-size: 1.3rem;\n  transition: color .1s ease-in;\n  z-index: 110;\n  &:hover {\n    color: #42526e;\n  }\n`;\n\nconst Container = styled.div`\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 1rem;\n  }  \n`;\n\nconst Header = styled.div`\n  position: relative;\n  margin-bottom: .3rem;\n  padding-left: calc(2rem - .5rem);\n`;\n\nconst Body = styled.div`\n  padding-left: 2rem;\n`;\n\nconst Title = styled.h3`\n  padding: .3rem .5rem;\n  font-size: 1.2rem;\n  font-weight: 600;\n`;\n\nconst Icon = styled.div`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  font-size: 1rem;\n  transform: translateY(-50%);\n`;\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 1rem;\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Col = styled.div`\n`;\n\nconst TitleContainer = (props) => {\n  const { card } = props;\n\n  return (\n    <Container>\n      <Header>\n        <Icon>\n          <FontAwesomeIcon icon=\"window-maximize\" />\n        </Icon>\n        <CardTitle cardId={card._cardId} cardTitle={card.title} />\n      </Header>\n    </Container>\n  )\n};\n\nconst DescriptionContainer = (props) => {\n  const { card } = props;\n\n  return (\n    <Container>\n      <Header>\n        <Icon>\n          <FontAwesomeIcon icon=\"align-left\" />\n        </Icon>\n        <Title>\n          Description\n        </Title>\n      </Header>\n      <Body>\n        <CardDescription cardId={card._cardId} cardDescription={card.description} />\n      </Body>\n    </Container>\n  )\n};\n\nconst LabelContainer = (props) => {\n  const { card } = props;\n  if (card.cardLabels.length === 0) return null;\n\n  return (\n    <Container>\n      <Header>\n        <Icon>\n          <FontAwesomeIcon icon=\"tag\" />\n        </Icon>\n        <Title>\n          Labels\n        </Title>\n      </Header>\n      <Body>\n        <Label cardLabels={card.cardLabels}/>\n      </Body>\n    </Container>\n  )\n};\n\nconst ChecklistContainer = (props) => {\n  const { card } = props;\n  if (card.checkLists.length === 0) return null;\n  return (\n    card.checkLists.map((checkListId, index) => (\n      <Container key={index}>\n        <CheckList cardId={card._cardId} checkListId={checkListId} />\n      </Container>\n    ))\n  )\n};\n\nconst CardModal = (props) => {\n  const { card, lists, currentBoardId } = props;\n  if (!currentBoardId) return null;\n  const boardUrl = `/b/${currentBoardId}`;\n  if (!card) return <Redirect to={boardUrl} />;\n\n  let listId = '';\n  Object.keys(lists).forEach(list => {\n    lists[list].cards.forEach(item => {\n      if (item === card._cardId) {\n        listId = list;\n      }\n    })\n  });\n  return (\n    <Backdrop>\n      <CloseBackdrop onClick={() => history.push(boardUrl)} />\n      <Wrapper onClick={(e) => e.preventDefault()}>\n        <CloseButton onClick={() => history.push(boardUrl)}>\n          <FontAwesomeIcon icon=\"times\" />\n        </CloseButton>\n        <TitleContainer card={card}/>\n        <Row>\n          <Col>\n            <DescriptionContainer card={card}/>\n            <LabelContainer card={card}/>\n            <ChecklistContainer card={card} />\n          </Col>\n          <Col>\n            <CardActions\n              card={card}\n              title=\"Add to card\"\n              actions={[\"Label\", \"CheckList\"]}\n              listId={listId}\n            />\n            <CardActions\n              card={card}\n              title=\"Actions\"\n              actions={[\"Delete\"]}\n              listId={listId}\n            />\n          </Col>\n        </Row>\n      </Wrapper>\n    </Backdrop>\n  )\n};\n\nCardModal.propTypes = {\n  currentBoardId: PropTypes.string,\n  card: PropTypes.shape({\n    _cardId: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    checkLists: PropTypes.arrayOf(PropTypes.string).isRequired,\n    cardLabels: PropTypes.array.isRequired,\n  }),\n  lists: PropTypes.objectOf(\n    PropTypes.shape({\n      _listId: PropTypes.string.isRequired,\n      title: PropTypes.string,\n      cards: PropTypes.arrayOf(PropTypes.string).isRequired\n    })\n  ).isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    currentBoardId: state.rootReducer.currentBoardID,\n    card: state.cardReducer[ownProps.match.params.cardId],\n    lists: state.listReducer,\n  }\n}\n\nexport default connect(mapStateToProps)(CardModal);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background: #2E7EAF;\n`;\nconst Svg = styled.svg`\n  width: 50rem;\n  path { \n    transition: stroke-dashoffset 2s ease-in-out;\n  }      \n`;\n\nclass NotFound extends Component {\n  constructor(props) {\n    super(props);\n    this.svg = React.createRef();\n  }\n\n  componentDidMount() {\n    this.lineDraw();\n  }\n\n  lineDraw(){\n    const svg = this.svg.current;\n    if (!svg) return;\n    const path = svg.firstChild;\n    const length = path.getTotalLength();\n    path.style.transition = path.style.WebkitTransition = 'none';\n    path.style.strokeDasharray = length + ' ' + length;\n    path.style.strokeDashoffset = length;\n    path.getBoundingClientRect();\n    path.style.transition = path.style.WebkitTransition = 'stroke-dashoffset 5s ease-in-out';\n    path.style.strokeDashoffset = '0';\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Svg viewBox=\"0 0 600 300\" ref={this.svg}>\n          <path\n            stroke=\"#fff\"\n            strokeWidth=\"2\"\n            fill=\"none\"\n            strokeDashoffset=\"0\"\n            d=\"M123.689,254.399V188.54H11.95v-21.089L119.249,13.903h35.149\n              v149.478h33.67v25.159h-33.67v65.859H123.689z M123.689,163.381V83.092c0-12.58,0.37-25.16,1.11-37.74h-1.11\n              c-7.4,14.06-13.32,24.42-19.98,35.52L44.88,162.641v0.74H123.689z\n              M289.443,258.47c-46.989,0-79.179-44.029-79.918-123.578\n              c0-81.029,35.149-125.059,83.988-125.059c50.319,0,79.549,45.14,79.549,121.729c0,81.769-30.709,126.908-83.249,126.908H289.443z\n              M291.293,233.31c32.93,0,48.839-38.85,48.839-100.268c0-59.199-14.8-98.049-48.839-98.049c-29.6,0-48.84,37.74-48.84,98.049\n              c-0.739,62.529,18.5,100.268,48.47,100.268H291.293z\n              M503.297,254.399V188.54H391.559v-21.089L498.858,13.903h35.149\n              v149.478h33.67v25.159h-33.67v65.859H503.297z M503.297,163.381V83.092c0-12.58,0.37-25.16,1.11-37.74h-1.11\n              c-7.399,14.06-13.319,24.42-19.979,35.52l-58.829,81.769v0.74H503.297z\"\n          />\n        </Svg>\n      </Wrapper>\n    )\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Boards from '../pages/Boards'\nimport Board from '../pages/Board'\nimport CardModal from '../pages/CardModal';\nimport NotFound from '../pages/NotFound';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Boards}/>\n      <Route path=\"/b\">\n        <Route path=\"/b/:boardId\" component={Board} />\n        <Route exact path=\"/b/:boardId/c/:cardId\" component={CardModal}/>\n      </Route>\n      <Route exact component={NotFound} />\n    </Switch>\n  )\n};\n\nexport default Routes;\n","import { normalize, schema } from \"normalizr\";\n\n// This function takes the tree shaped boards and returns a flat structure more suitable to a redux store.\nconst normalizeBoards = (boards) => {\n  if (!boards) return {};\n\n  const checkListsById = new schema.Entity(\n    'checkLists',\n    {},\n    { idAttribute: '_checkListId' }\n  );\n\n  const cardById = new schema.Entity(\n    'cards',\n    { checkLists: [checkListsById] },\n    { idAttribute: '_cardId' }\n  );\n\n  const listById = new schema.Entity(\n    'lists',\n    { cards: [cardById] },\n    { idAttribute: '_listId' }\n    );\n\n  const board = new schema.Entity(\n    'boards',\n    { lists: [listById] },\n    { idAttribute: '_boardId' }\n    );\n\n  const { entities } = normalize(boards, [board]);\n\n  return entities;\n};\n\nexport default normalizeBoards;\n","const boards = [\n  {\n    _boardId: 'b1',\n    title: 'Started board',\n    color: '#CD5A91',\n    lists: [],\n  },\n  {\n    _boardId: 'b2',\n    title: 'Test Board',\n    color: '#2E7EAF',\n    lists: [\n      {\n        _listId: 'b2l1',\n        title: 'Planned Tasks',\n        cards: [\n          {\n            _cardId: 'b2l1c1',\n            title: \"Drag card to the 'Completed' List to show it's done\",\n            description: '',\n            cardLabels: [],\n            checkLists: [],\n          },\n          {\n            _cardId: 'b2l1c2',\n            title: \"[CLICK TO OPEN]\",\n            description: \"Click Edit ↑ to edit a card's description. To change a card's title just click it!\",\n            cardLabels: [],\n            checkLists: [],\n          },\n          {\n            _cardId: 'b2l1c3',\n            title: \"[Check List]\",\n            description: \"Use the buttons on the right to add checklists. →\",\n            cardLabels: [],\n            checkLists: [\n              {\n                _checkListId: 'b2l1c3ch1',\n                title: 'This is a checklist with stuff you can add to cards.',\n                items: [\n                  { status: true, description: 'Add another checklist and some items using the Checklist button above.' },\n                  { status: false, description: 'Add another Label.' },\n                ]\n              }\n            ],\n          },\n          {\n            _cardId: 'b2l1c4',\n            title: \"[Labels]\",\n            description: \"Use the buttons on the right to add checklists. →\",\n            cardLabels: [\n              { _labelId: 0, color: '#61BC4F', },\n              { _labelId: 3, color: '#EB5A46', },\n              { _labelId: 4, color: '#C376E0', },\n            ],\n            checkLists: [],\n          },\n        ],\n      },\n      {\n        _listId: 'b2l2',\n        title: 'Work In Progress',\n        cards: [],\n      },\n      {\n        _listId: 'b2l3',\n        title: 'Completed',\n        cards: [\n          {\n            _cardId: 'b2l3c1',\n            title: \"Click 'Show Menu' ↑ to edit a board details.\",\n            description: \"\",\n            cardLabels: [\n              { _labelId: 3, color: '#EB5A46', },\n            ],\n            checkLists: [],\n          },\n        ],\n      }\n    ],\n  },\n];\n\nexport default boards;\n","const HeaderNavigationList = [\n  {\n    title: 'Boards',\n    path: '/',\n    faIcon: 'columns',\n  },\n];\n\nexport default HeaderNavigationList\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome/index';\nimport HeaderNavigationList from './HeaderNavigationList';\nimport styled from 'styled-components';\nimport logo from '../../images/logo.svg';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n  align-items: center;\n  padding: 0 1.5rem;\n  background-color: ${props => props.color};\n  box-shadow: inset 0px 0px 0px 40px rgba(0, 0, 0, .3);\n  transition: background-color .2s ease-in;\n`;\n\nconst Nav = styled.nav``;\n\nconst NavList = styled.ul`\n  display: flex;\n`;\nNavList.displayName = 'NavList';\n\nconst NavItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: .5rem\n  padding: .2rem .5rem\n  color: rgba(255, 255, 255, 0.8);\n  border-radius: 3px;\n  background-color: rgba(255, 255, 255, 0.2);\n  transition: all .2s ease-in;\n  &:hover {\n    color: #fff;\n    background-color: rgba(255, 255, 255, 0.25);\n  }\n`;\n\nconst NavIcon = styled.i`\n  margin-right: .3rem;\n  font-size: 1rem;\n`;\n\nconst NavTitle = styled.h3`\n  font-size: 1rem;\n  line-height: 1.5;\n`;\n\nconst Logo = styled.img`\n  width: 10rem;\n  margin: 0 auto;\n`;\n\nconst Actions = styled.div``;\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navigation: HeaderNavigationList || []\n    }\n  }\n\n  render() {\n    const { boards, currentBoardID } = this.props;\n    const { navigation } = this.state;\n    const currentPath = window.location.pathname;\n    let headerBackground = \"#2E7EAF\";\n    if (boards[currentBoardID]) {\n      headerBackground = boards[currentBoardID].color\n    }\n\n    return (\n      <Wrapper color={headerBackground}>\n        <Nav>\n          {navigation.map((item, index) => {\n            if (currentPath === item.path) return null;\n            return (\n              <NavList key={index}>\n                <NavLink to={item.path}>\n                  <NavItem>\n                    <NavIcon>\n                      <FontAwesomeIcon icon={item.faIcon} />\n                    </NavIcon>\n                    <NavTitle>\n                      {item.title}\n                    </NavTitle>\n                  </NavItem>\n                </NavLink>\n              </NavList>\n            )\n          })}\n        </Nav>\n        <Logo src={logo} />\n        <Actions />\n      </Wrapper>\n    )\n  }\n}\n\nHeader.defaultProps = {\n  currentBoardID: null,\n  boards: [],\n};\n\nHeader.propTypes = {\n  currentBoardID: PropTypes.string,\n  boards: PropTypes.objectOf(\n    PropTypes.shape({\n      _boardId: PropTypes.string,\n      title: PropTypes.string,\n      color: PropTypes.string.isRequired,\n      lists: PropTypes.arrayOf(PropTypes.string)\n    })\n  ),\n};\n\nfunction mapStateToProps(state) {\n  return {\n    boards: state.boardReducer,\n    currentBoardID: state.rootReducer.currentBoardID,\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport './Loader';\nimport styled, { css, keyframes } from \"styled-components\";\n\nfunction createCSS() {\n  let styles = '';\n  for (let i = 0; i <= 12; i += 1) {\n    styles += `\n      &:nth-child(${i}) {\n        transform: rotate(${i * 30}deg);\n        animation-delay: ${-1.1 + (0.1 * i)}s;\n      }\n    `\n  }\n\n  return css`${styles}`;\n}\n\nconst opacity = keyframes`\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Spinner = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 4rem;\n  height: 4rem;\n\n  div {\n    transform-origin: 2rem 2rem;\n    animation: ${opacity} 1.2s linear infinite;\n    &:after {\n      content: \"\";\n      display: block;\n      position: absolute;\n      top: .4rem;\n      left: 1.75rem;\n      width: .25rem;\n      height: .875rem;\n      border-radius: 20%;\n      background: #172b4d;\n    }\n    ${createCSS()}\n  }\n`;\n\nconst Loader = () => (\n  <Wrapper>\n    <Spinner>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n    </Spinner>\n  </Wrapper>\n);\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { requestBoards, responseBoardsSuccess } from \"./redux/rootReducer/actions/actions\";\nimport Routes from './routes/Routes';\nimport normalizeBoards from './helpers/normalizeBoards'\nimport boards from './data';\nimport Header from \"./components/Header/Header\";\nimport styled from \"styled-components\";\nimport Loader from \"./components/Loader/Loader\";\n\nconst MainWrapper = styled.div` \n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: auto 1fr;\n  grid-template-areas: 'header' 'main';\n  min-height: 100vh;\n  overflow: hidden;\n`;\n\nconst HeaderWrapper = styled.header`\n  grid-area: header;\n`;\n\nconst ContentWrapper = styled.main`\n  grid-area: main;\n`;\n\nclass App extends Component {\n  componentDidMount() {\n    //simulate request to db\n    new Promise((resolve) => {\n      this.props.actions.requestBoards();\n      const normalizeBoardsData = normalizeBoards(boards);\n      setTimeout(() => {\n        resolve(normalizeBoardsData);\n      }, 1000)\n    }).then(response => {\n      this.props.actions.responseBoardsSuccess(response)\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const { isLoading } = this.props;\n\n    return (\n      <MainWrapper>\n        <HeaderWrapper>\n          <Header />\n        </HeaderWrapper>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <ContentWrapper>\n            <Routes />\n          </ContentWrapper>\n        )}\n      </MainWrapper>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoading: state.rootReducer.isLoading,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      requestBoards,\n      responseBoardsSuccess,\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/** FontAwesomeIcons */\nimport {\n  library\n} from '@fortawesome/fontawesome-svg-core';\n\nimport {\n  faColumns,\n  faTrash,\n  faEllipsisH,\n  faTimes,\n  faPencilAlt,\n  faCheck,\n  faWindowMaximize,\n  faAlignLeft,\n  faTag,\n  faCheckSquare,\n  faChevronLeft,\n  faFillDrip,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faColumns,\n  faTrash,\n  faEllipsisH,\n  faTimes,\n  faPencilAlt,\n  faCheck,\n  faWindowMaximize,\n  faAlignLeft,\n  faTag,\n  faCheckSquare,\n  faChevronLeft,\n  faFillDrip,\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store, history } from './redux/store/index';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConnectedRouter } from 'connected-react-router'\nimport { createGlobalStyle } from 'styled-components';\nimport App from './App';\nimport './helpers/fontawesome';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    color: #40424b;\n    letter-spacing: .5px; \n    * {\n      box-sizing: border-box;\n    }\n  }\n  .scroll-disabled {\n    overflow-y: hidden;\n  }\n  ::-webkit-scrollbar:vertical {\n    width: .5rem;\n    height: .5rem;\n  }\n  ::-webkit-scrollbar {\n    width: .65rem;\n    height: .65rem;\n  }\n  ::-webkit-scrollbar-track:vertical {\n    background: rgba(9,30,66,.12);\n    border-radius: .3rem;\n  }\n  ::-webkit-scrollbar-track {\n    background: rgba(0,0,0,.15);\n    border-radius: .3rem;\n  }\n  ::-webkit-scrollbar-thumb:vertical {\n    background: rgba(9,30,66,.18);\n    border-radius: .3rem;\n  }\n   ::-webkit-scrollbar-thumb {\n    background: rgba(223, 225, 230, .5);\n    border-radius: .3rem;\n  }\n  h1,h2,h3,h4,h5,h6,p {\n    margin: 0;\n    font-weight: normal;\n  }\n  button {\n    border: none;\n    outline: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n  a {\n    color: #172b4d;\n    text-decoration: none;\n    &:hover {\n      color: #091e42;\n    }\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n      <GlobalStyle />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d7a221d9.svg\";"],"sourceRoot":""}